//HeaderImportExport-->
//SiteId=0
//Enterprise=True
//ScriptType=0
//ScriptGroup=HCS
//HeaderImportExport<--
 uses
  Event_RouteGenLibrary, Eng_RouteFunctions,
  RouteFunctions, RouteSD03_ElyCu2Marking, CT_RoutStkHt;

procedure Secondary_Plug_Common;
begin
  StepDeptERP('SCRSP-A');
  StepWCERP('SCRSP-A0');
  StepParamERP('Plug Ink', Fnc.SysGetAttrValue('SecondaryPlugInk'));
  SMPlugAttributes;
end;

procedure Secondary_PlugA_SD;
begin
  StepParamERP('Bottom A Layer', Fnc.SysGetAttrValue('BotLayer'));
  Secondary_Plug_Common;
end;

procedure Secondary_PlugB_SD;
begin
  StepParamERP('Top B Layer', Fnc.SysGetAttrValue('TopLayer'));
  Secondary_Plug_Common
end;

procedure Plug_Formation_SD;
begin                                                            
  StepDeptERP('RESCO-A0');
  StepWCERP('RESCO-A0');

  StepParamERP('Process', 'Steps Below');
  StepParamERP('Step 1', 'Semi-Cure');
  StepParamERP('Step 2', 'Exposure');
  StepParamERP('Step 3', 'Develop');
end;
                  
procedure SP_Final_Cure_SD;
begin                              
  StepDeptERP('STCUR-A');
  StepWCERP('STCUR-A');
end;

procedure Step_Curing_SD
begin
end;

procedure Back_Drill_Common_SD(process : string);
var
  thk : float
begin
  StepDeptERP('BACKD-A');
  StepWCERP('BACKD-A');
  
  thk := 0.0;
  if process = 'epoxy' then  
    thk := Fnc.SysGetAttrValue('LayupThickness')
  else if process = 'aftermask' then
    thk := ThicknessOverMask;

  StepParamERP('Thickness', FormatFloat('0.000', thk)); 
  StepParamERP('Machine', Fnc.SysGetAttrValue('BackDrill_Mch')); 
  StepInstructionERP('BACKD001'); // REMARK:100% BACKDRILL COUPON X-RAY CHECK

  if (
      (Fnc.SysGetAttrValue('BackDrill_Mch') = 'CAMERA') or
      (Eng_JobName = 'KHQ12-0011') or
      (Eng_JobName = 'KHQ12-0012') or
      (Eng_JobName = 'WHQ12-0019') or
      (Eng_JobName = 'WHQ12-0020') or
      (Eng_JobName = 'WHQ12-0018') or
      (Eng_JobName = 'KHQ12-0013')
     )
  then
  begin
    StepInstructionERP('BACKD002'); // REMARK:USE 4 CAMERA MACHINE.
    //ShowMessage('For 3E PCB Only - Specific Job Names used in IES Back Drill rule, how to transfer this to Engenix?')
  end;
end;

procedure Back_Drill_A_SD;
begin                     
  Back_Drill_Common_SD('aftermask');   
  StepParamERP('Side A', Fnc.SysGetAttrValue('BotLayer')); 
end;

procedure Back_Drill_B_SD;
begin
  Back_Drill_Common_SD('aftermask');
  StepParamERP('Side B', Fnc.SysGetAttrValue('TopLayer')); 
end;

procedure Back_Drill_A_Epoxy_SD;
begin                     
  Back_Drill_Common_SD('epoxy');
  StepParamERP('Side A', Fnc.SysGetAttrValue('BotLayer')); 
end;

procedure Back_Drill_B_Epoxy_SD;
begin
  Back_Drill_Common_SD('epoxy');
  StepParamERP('Side B', Fnc.SysGetAttrValue('TopLayer')); 
end;

procedure Gold_Tab_Plating_SD;
begin
  StepDeptERP('FNGER-A');
  StepWCERP('FNGER-A');
  StepParamERP('Au Spec', FloatToStr(Fnc.SysGetAttrValue('Gold_Fgr_AuSpec')) + ' microns');
  StepParamERP('Ni Spec', FloatToStr(Fnc.SysGetAttrValue('Gold_Fgr_NiSpec')) + ' microns');
  StepParamERP('Area', FloatToStr(Fnc.SysGetAttrValue('Gold_Fgr_Area')) + ' dm2');
end;

procedure Gold_Finger_Taping_SD;
begin
  StepDeptERP('TAPNG-A');
  StepWCERP('TAPNG-A');
end;                              

procedure Impedance_SD;
begin
  StepDeptERP('IMPED-A');
  StepWCERP('IMPED-A');
end;              

procedure HighPressAirBlow_SD;
begin
  StepDeptERP('HPBOW-A');
  StepWCERP('HPBOW-A');
end;

procedure Hole_Check_SD;
begin

  {if Fnc.SysGetAttrValue('LayupThickness') >= 3.5 then    // Change per request from Herole Feb 2016
  begin
    StepDeptERP('HOLAN-A');
    StepWCERP('HOLAN-A');
  end
  else
  begin
    StepDeptERP('HOLCH-A');
    StepWCERP('HOLCH-A');
  end;}

  StepDeptERP('HOLCH-A');
  StepWCERP('HOLCH-A');

  StepParamERP('Board Thickness', FormatFloat('0.000', ThicknessOverMask)); 
end;

procedure Hole_Check_BD_SD;
begin
  StepDeptERP('HOLCD-A');
  StepWCERP('HOLCD-A0');
  
  if Fnc.SysGetAttrValue('MfgPartType') = 'Top' then
    StepParamERP('Board Thickness', FormatFloat('0.000', ThicknessOverMask));
  else
    StepParamERP('Board Thickness', FormatFloat('0.000', Fnc.SysGetAttrValue('LayupThickness'))); 
end;

procedure Hole_Check_BDB4M_SD;
begin
  StepDeptERP('HOLCD-A');
  StepWCERP('HOLCD-A0');
  
  StepParamERP('Board Thickness', FormatFloat('0.000', Fnc.SysGetAttrValue('LayupThickness'))); 
end; 
                                
procedure HAL_SD;
begin

  if Fnc.SysGetAttrValue('Board_Finish') = 'Lead Free HAL' then
  begin
    StepDeptERP('HALVL-B');
    StepWCERP('HALVL-B1');
    //StepParamERP('Board Finish', Fnc.SysGetAttrValue('Board_Finish'));
  end
  else
  begin
    StepDeptERP('HALVL-A');
    StepWCERP('HALVL-A');
  end;
  
  StepParamERP('Board Finish', Fnc.SysGetAttrValue('Board_Finish'));  // 1322

  StepParamERP('Min Thickness', Fnc.SysGetAttrValue('HAL_MinThk'));
  StepParamERP('HAL Cu Area', Fnc.SysGetAttrValue('HAL_CuArea')); // 960 - Additional Cu Area for HAL        

  if Fnc.SysGetAttrValue('HAL_BkDrll_Rmk') <> '' then
    StepParamERP('Remark', Fnc.SysGetAttrValue('HAL_BkDrll_Rmk'));

  if CustCode_Rule('Customer') = 'HQ' then
    StepInstructionERP('HALVL001'); //REMARKS:MAX 2x TIME HASL..

  if CustCode_Rule('Customer') = 'FA' then
    StepInstructionERP('HALVL003'); //REMARK : 100% non-wetting check”.
end;

procedure OSP_SD;
begin
  if (
      (Fnc.SysGetAttrValue('OSP_Type') = 'SOLUBLE AVS') or
      (Fnc.SysGetAttrValue('OSP_Type') = 'LEAD FREE WPF21') or
      (Fnc.SysGetAttrValue('OSP_Type') = 'LEADFREE WPF21 ORGNC') or
      (Fnc.SysGetAttrValue('OSP_Type') = 'LEAD FREE F2LX')
     )
  then
  begin
    if (
        (Eng_JobType = 'Sample') and
        (CustCode_Rule('Customer') = 'NE') and
        (Fnc.SysGetAttrValue('OSP_Type') <> 'LEAD FREE F2LX')
       )
    then
      ShowMessage('FOR ALL NEC MODELS EXCEPT 243-652378-A and 243-651809-A, MUST USE LEADFREE F2LX AS FLUX TYPE.');

    if (
        (Eng_JobType = 'Sample') and
        (CustCode_Rule('Customer') = 'HR') and
        (Fnc.SysGetAttrValue('OSP_Type') <> 'LEAD FREE F2LX')
       )
    then
      ShowMessage('FOR ALL NEC MODELS EXCEPT 243-652378-A and 243-651809-A, MUST USE ''LEADFREE F2LX'' AS FLUX TYPE.');

    if Fnc.SysGetAttrValue('OSP_Type') = 'LEAD FREE F2LX' then
    begin
      StepDeptERP('HHFLX-C');
      StepWCERP('HHFLX-C02');
    end;
    else
    begin
      if ((CustCode_Rule('Customer') = 'BC') or (CustCode_Rule('Customer') = 'BF')) then
        Fnc.SysSetAttrValue('OSP_Type','LEADFREE WPF21 ORGNC');

      if Fnc.SysGetAttrValue('OSP_Type') = 'LEADFREE WPF21 ORGNC' then
      begin
        StepDeptERP('HHFLX-C');
        StepWCERP('HHFLX-C01');
      end
      else
      begin
        if (
            (
             (CustCode_Rule('Customer') = 'HP') and
             ((copy(Fnc.SysGetAttrValue('Part_Desc'),1,1) = 'A') or (copy(Fnc.SysGetAttrValue('Part_Desc'),1,2) = '3A'))
            )
            or
            (Eng_JobName = 'KHQ12-0010')
           )
        then
        begin
          StepDeptERP('HHFLX-C');
          StepWCERP('HHFLX-C01');
        end
        else
        begin
          StepDeptERP('HHFLX-A');
          StepWCERP('HHFLX-A02');
        end;

      end;
    end;
  end
  else
  begin
    if (
        (Fnc.SysGetAttrValue('Q1000') = true) or
        (Fnc.SysGetAttrValue('LayupThickness') <= 1.2) or
        ((Fnc.SysGetAttrValue('PCB_Length') <= 150) and (Fnc.SysGetAttrValue('PCB_Width') <= 150))
       )
    then
    begin
      StepDeptERP('HHFLX-A');
      StepWCERP('HHFLX-A01');
    end
    else
    begin
      {if ((Fnc.SysGetAttrValue('Gold_Type') <> 'None') and (Fnc.SysGetAttrValue('OSP_Type') = 'WATER SOLUBLE')) then}
      if (
          (
           (Fnc.SysGetAttrValue('Sel_Gold_Type') <> 'None') or
           (Fnc.SysGetAttrValue('Board_Finish') = 'ENIG') or
           //(Fnc.SysGetAttrValue('Board_Finish') = 'ENIG + OSP') or // 1173 Additional Surface Finishing. Selective ENIG + OSP 
           ( ENIGplusOSP ) or // 1256
           (Fnc.SysGetAttrValue('Board_Finish') = 'ENEPIG') or
           (Fnc.SysGetAttrValue('Board_Finish') = 'Full Body Gold') or
           (Fnc.SysGetAttrValue('Board_Finish') = 'Thin/Thick Au Plate') or // 1256 NEED TO CHECK THIS
           ((Fnc.SysGetAttrValue('Gold_Fgr_Type') <> 'None') and (Fnc.SysGetAttrValue('Gold_Fgr_Type') <> 'Tab Plating'))
          )
          and
          (Fnc.SysGetAttrValue('OSP_Type') = 'WATER SOLUBLE')
         )
      then
      begin
        StepDeptERP('HHFLX-A');
        StepWCERP('HHFLX-A02');
      end
      else                       
      begin
        StepDeptERP('HHFLX-A');
        StepWCERP('HHFLX-A');
      end;                         
    end;

  end;

  StepParamERP('OSP Type', Fnc.SysGetAttrValue('OSP_Type'));

  //if Fnc.SysGetAttrValue('Cust_Code') = 'KDE' then
  if ((Eng_JobType = 'Production') and (CustCode_Rule('Customer') = 'DE')) then
    StepInstructionERP('HHFLX001'); //REMARKS:CONTROL FLUX THICKNESS TO 0.2 ~ 0.4µm.

  if (( Fnc.SysGetAttrValue('SMPlugType') <> 'None' ) or ( IsSelectiveGold )) then
    StepInstructionERP('OSP001'); // 836 Instruction Code Update

end;

procedure Final_Insp_SD;
begin
  StepDeptERP('FINAL-A');
  StepWCERP('FINAL-A');
  
  if Fnc.SysGetAttrValue('Part_Type') = 'Internal' then
    StepParamERP('KT Number', Fnc.SysGetAttrValue('KT_Number')); 

  if Fnc.SysGetAttrValue('Marking_A') <> 'None' then
    StepParamERP('Marking-A', Fnc.SysGetAttrValue('Marking_A')); 

  if Fnc.SysGetAttrValue('Marking_B') <> 'None' then
    StepParamERP('Marking-B', Fnc.SysGetAttrValue('Marking_B'));

  if Fnc.SysGetAttrValue('Marking_A1') <> 'None' then
    StepParamERP('Marking-A1', Fnc.SysGetAttrValue('Marking_A1'));

  if Fnc.SysGetAttrValue('Marking_B1') <> 'None' then
    StepParamERP('Marking-B1', Fnc.SysGetAttrValue('Marking_B1'));

  if pos('Primary',Fnc.SysGetAttrValue('SMPlugType')) > 0 then
    StepParamERP(Fnc.SysGetAttrValue('SMPlugType'), Fnc.SysGetAttrValue('PrimaryPlugInk'));

  if (
      {(Fnc.SysGetAttrValue('Gold_Type') <> 'None' ) or}
      (
       (Fnc.SysGetAttrValue('Sel_Gold_Type') <> 'None') or
       (Fnc.SysGetAttrValue('Board_Finish') = 'ENIG') or 
       //(Fnc.SysGetAttrValue('Board_Finish') = 'ENIG + OSP') or // 1173 Additional Surface Finishing. Selective ENIG + OSP
       ( ENIGplusOSP ) or // 1256
       (Fnc.SysGetAttrValue('Board_Finish') = 'ENEPIG') or
       (Fnc.SysGetAttrValue('Board_Finish') = 'Full Body Gold') or
       (Fnc.SysGetAttrValue('Board_Finish') = 'Thin/Thick Au Plate') or
       ((Fnc.SysGetAttrValue('Gold_Fgr_Type') <> 'None') and (Fnc.SysGetAttrValue('Gold_Fgr_Type') <> 'Tab Plating'))
      ) or
      (Fnc.SysGetAttrValue('Board_Finish') = 'HAL' ) or
      (Fnc.SysGetAttrValue('Board_Finish') = 'Lead Free HAL' ) or
      (Fnc.SysGetAttrValue('Board_Finish') = 'LB Free HAL + Immersion silver') or // 1322 
      (Fnc.SysGetAttrValue('Board_Finish') = 'Immersion Silver' ) or
      ((Fnc.SysGetAttrValue('OSP_Type') <> 'SOLUBLE AVS' ) and (Fnc.SysGetAttrValue('OSP_Type') <> 'WATER SOLUBLE' )  and (Fnc.SysGetAttrValue('OSP_Type') <> 'None'))
      // or
      //(Fnc.SysGetAttrValue('OSP_Type') <> 'ROSIN FLUX' )
     )
  then                     
  begin
    if pos('Secondary',Fnc.SysGetAttrValue('SMPlugType')) > 0 then
    StepParamERP(Fnc.SysGetAttrValue('SMPlugType'), Fnc.SysGetAttrValue('SecondaryPlugInk'));
  end;

  if Fnc.SysGetAttrValue('CappedVia') = true then
    StepParamERP('Capped Via', 'Yes');

  if Fnc.SysGetAttrValue('Chamfer_Type') <> 'None' then
    StepParamERP('Chamfer', Fnc.SysGetAttrValue('Chamfer_Spec'));

  if Fnc.SysGetAttrValue('Milling_Type') <> 'None' then
    StepParamERP('Milling', Fnc.SysGetAttrValue('Milling_Type'));

  if Fnc.SysGetAttrValue('Board_Finish') = 'HAL' then
    StepParamERP('HAL Type', Fnc.SysGetAttrValue('Board_Finish'));

  if Fnc.SysGetAttrValue('Board_Finish') = 'Lead Free HAL' then
    StepParamERP('HAL Type', Fnc.SysGetAttrValue('Board_Finish'));
    
  if Fnc.SysGetAttrValue('Board_Finish') = 'LB Free HAL + Immersion silver' then // 1322
    StepParamERP('HAL Type', Fnc.SysGetAttrValue('Board_Finish'));

  if Fnc.SysGetAttrValue('Board_Finish') = 'Immersion Silver' then
    StepParamERP('Immersion Silver', Fnc.SysGetAttrValue('Imm_Silver'));

  if Fnc.SysGetAttrValue('VCut_Type') <> 'None' then
    StepParamERP('V-Cut Type', Fnc.SysGetAttrValue('VCut_Type'));

  //Requested by Jenny 8/17/15
  //if Fnc.SysGetAttrValue('Board_Finish') = 'Full Body Gold + LGA' then   1256 
  //  StepParamERP('Gold Type', Fnc.SysGetAttrValue('Board_Finish'));

  if Fnc.SysGetAttrValue('Sel_Gold_Type') <> 'None' then
    StepParamERP('Gold Type', Fnc.SysGetAttrValue('Sel_Gold_Type'));

  if Fnc.SysGetAttrValue('Gold_Fgr_Type') <> 'None' then
    StepParamERP('Gold Type', Fnc.SysGetAttrValue('Gold_Fgr_Type'));

  if ( Fnc.SysGetAttrValue('Board_Finish') = 'OSP' ) or ( ENIGplusOSP ) then // 1173 Additional Surface Finishing. Selective ENIG + OSP  // 1256
    StepParamERP('OSP Type', Fnc.SysGetAttrValue('OSP_Type'));
                              
  if ( Fnc.SysGetAttrValue('Board_Finish') = 'ENIG' ) or                            
     //( Fnc.SysGetAttrValue('Board_Finish') = 'ENIG + OSP' ) or // 1173 Additional Surface Finishing. Selective ENIG + OSP 
     ( ENIGplusOSP ) or
     ( Fnc.SysGetAttrValue('Board_Finish') = 'ENEPIG' )
  then
    StepParamERP('Gold Type', Fnc.SysGetAttrValue('Board_Finish'));

  if Fnc.SysGetAttrValue('Board_Finish') = 'Immersion Tin' then
    StepParamERP('Immersion Tin', Fnc.SysGetAttrValue('Imm_Tin'));

  // 844 Backdrill after Electrolytic Cu Option (Call to SetDrillTypes not needed
  if BKDRTop = true then
    StepParamERP('Back Drill', Fnc.SysGetAttrValue('TopLayer'));
  else if BKDRwEpoxyTop = true then
    StepParamERP('Back Drill', Fnc.SysGetAttrValue('TopLayer'));

  if BKDRBot = true then
    StepParamERP('Back Drill', Fnc.SysGetAttrValue('BotLayer'));
  else if BKDRwEpoxyBot then
    StepParamERP('Back Drill', Fnc.SysGetAttrValue('BotLayer'));
end;

procedure Final_Scope_Ins_SD;
begin
  StepDeptERP('SCPIN-A');
  StepWCERP('SCPIN-A');

  if Fnc.SysGetAttrValue('Design_Type') = 'Flip Chip' then
    StepParamERP('Design Type', Fnc.SysGetAttrValue('Design_Type'));
end;

procedure Final_Rinse_SD;
begin
  if ((Fnc.SysGetAttrValue('Board_Finish') = 'Immersion Tin') and (Fnc.SysGetAttrValue('LayupThickness') > 4.0)) then
  begin
    StepDeptERP('WASHS-A');
    StepWCERP('WASHS-A');
    StepInstructionERP('WASHS007');
  end
  else
  begin
    // Descision for Bondable Gold omitted - no longer used.
    StepDeptERP('WASHS-A');

    if (
        (Fnc.SysGetAttrValue('OSP_Type') = 'SOLUBLE AVS' ) or
        (Fnc.SysGetAttrValue('OSP_Type') = 'WATER SOLUBLE') or
        // Rosin Flux omitted - no longer used
        (Fnc.SysGetAttrValue('Board_Finish') = 'Immersion Silver')
       )
    then
      StepWCERP('WASHS-B0')
    else
      StepWCERP('WASHS-A0');
  end;

end;

procedure Part_EC_SD;
begin
  StepDeptERP('ELCHK-A');
  StepWCERP('ELCHK-A');
  
  InsertECParameters;  // 1255 EC Parameter Attributes 
end;

procedure EC_FlyingProbe_SD;
begin
  StepDeptERP('ECMSM-A');
  StepWCERP('ECMSM-A');
end;

// 1310 Back Drill EC
procedure BackDrill_EC_SD;
begin
  StepDeptERP('SLVER-A');
  StepWCERP('SLVER-A');
end;

procedure Immersion_Silver_SD;
begin
  StepDeptERP('SILVR-A');
  StepWCERP('SILVR-A');
  StepParamERP('Immersion Silver', Fnc.SysGetAttrValue('Imm_Silver'));
end;

procedure Carbon_Ink_SD;
begin
  StepDeptERP('CARBN-A');
  StepWCERP('CARBN-A');
end;

procedure MicroEtch_ImmTin_SD;
begin
  StepDeptERP('METCH-A');
  StepWCERP('METCH-A');
  StepInstructionERP('METCH008'); // REMARK : ETCH RATE: 0.80~1.2µm.
end;

procedure OffLine_PreTreatNI_SD;
begin
  StepDeptERP('RESSB-A');
  StepWCERP('RESSB-A');

end;

procedure Immersion_Tin_SD;
begin
  StepDeptERP('IMTIN-A');
  StepWCERP('IMTIN-A');
  StepParamERP('Immersion Tin', Fnc.SysGetAttrValue('Imm_Tin'));
end;

procedure Immersion_Tin_THK_SD;
begin
  Immersion_Tin_SD;
  StepInstructionERP('IMTIN001'); // REMARKS: - Vertical Immersion Tin line / - Max. 4 panels per basket - Rinse + dry
end;

procedure Immersion_Tin_Bake_Common;
begin
  StepDeptERP('BAKNG-A');
  StepWCERP('BAKNG-A');
end;

procedure Immersion_Tin_Bake_Norm_SD;
begin
  Immersion_Tin_Bake_Common;
  StepInstructionERP('BAKNG008'); // CONDITION : REFER TO WSI.
end;

procedure Immersion_Tin_Bake_Thk_SD;
begin
  Immersion_Tin_Bake_Common;
  StepInstructionERP('BAKNG010'); // REMARKS: - FI Baking Oven / - Refer to Immersion Tin Baking WSI / - Must bake within 24 hours after Imm Sn
  ShowMessage('Warning - Immersion Tin Spec = ' + Fnc.SysGetAttrValue('Imm_Tin') + #13 + ' If the Tin thickness >= 0.8um, please FEEDBACK to SY');
end;

procedure RinseAndDry_SD;
begin
  StepDeptERP('CURIN-A');
  StepWCERP('CURIN-A');
end;

procedure VCut_SD;
begin

  case Fnc.SysGetAttrValue('VCut_Type') of
    'PIECE V-CUT'      : begin StepDeptERP('V-CUT-D'); StepWCERP('V-CUT-D'); end;
    'SHEARING V-CUT'   : begin StepDeptERP('V-CUT-A'); StepWCERP('V-CUT-A'); end;
    'JUMP V-CUT'       : begin StepDeptERP('V-CUT-B0'); StepWCERP('V-CUT-B0'); end;
    'N-V-CUT'          : if Fnc.SysGetAttrValue('LayupThickness') < 1.0 then
                         begin
                           StepDeptERP('V-CUT-B0');
                           StepWCERP('V-CUT-B0');
                         end
                         else
                         begin
                           StepDeptERP('V-CUT-B0');
                           StepWCERP('V-CUT-B0');
                         end;
  end;

  StepParamERP('V-Cut Type', Fnc.SysGetAttrValue('VCut_Type'));
end;

procedure Resistance_Test_SD;
begin
  StepDeptERP('RTEST-A');
  StepWCERP('RTEST-A');
end;

procedure PnlRte_Chamfer_PR_SD;
begin
  StepDeptERP('ROUTE-A');
  StepWCERP('ROUTE-A');
  StepInstructionERP('ROUTE001'); // REMARKS : PRE-ROUTE
end;

procedure PnlRte_Chamfer_SD;
begin
  StepDeptERP('ROUTE-D0');
  StepWCERP('ROUTE-D0');
  StepParamERP('Chamfer Spec', Fnc.SysGetAttrValue('Chamfer_Spec'));

end;

procedure Milling_Common_SD;
begin
  StepDeptERP('ROUTE-D0');
  StepWCERP('ROUTE-D0');
  
  // 1191 Drill Side for Countersink/bore & milling 
  StepParamERP('Drill Side', DrillSide(Fnc.SysGetAttrValue('Milling_Side')));
end;

procedure Milling_SD;
begin
  Milling_Common_SD;
  // No ESL required - process name adequate
end;              

procedure Edge_Milling_SD;
begin
  Milling_Common_SD;
end;

procedure Edge_Milling_PR_SD;
begin
  StepDeptERP('ROUTE-D0');
  StepWCERP('ROUTE-D0');

  StepInstructionERP('ROUTE001'); // REMARKS : PRE-ROUTE
end;

procedure Counterbore_SD;
begin
  StepDeptERP('ROUTE-D0');
  StepWCERP('ROUTE-D0');
  
  // 1191 Drill Side for Countersink/bore & milling 
  StepParamERP('Drill Side', DrillSide(Fnc.SysGetAttrValue('Counterbore_Side')));
end;

procedure Punching_SD;
begin
  StepDeptERP('PUNCH-A');
  StepWCERP('PUNCH-A');
  StepParamERP('Die No 1-1', Fnc.SysGetAttrValue('Punch_Die11'));

  if Fnc.SysGetAttrValue('Punch_Die12') <> '0' then
    StepParamERP('Die No 1-2', Fnc.SysGetAttrValue('Punch_Die12'));
end;

procedure Punching_X2_SD;
begin
  StepDeptERP('PUNCH-A');
  StepWCERP('PUNCH-A');
  StepParamERP('Die No 2-1', Fnc.SysGetAttrValue('Punch_Die21'));

  if Fnc.SysGetAttrValue('Punch_Die22') <> '0' then
    StepParamERP('Die No 2-2', Fnc.SysGetAttrValue('Punch_Die22'));
end;

procedure Routing_SD;
begin
  StepDeptERP('ROUTE-A');

  if Fnc.SysGetAttrValue('Rout_Type') = 'Pinless Rout' then
  begin
    StepWCERP('ROUTE-B0');
    StepParamERP('Rout Type', Fnc.SysGetAttrValue('Rout_Type'));
  end
  else
    StepWCERP('ROUTE-A');

  //GetRoutStackHeight;
  
  if not Fnc.SysGetAttrValue('Rout_StackHt_Ovr') then // 1472
    GetRoutStackHeight
  else                    
  begin                                                    
    if Fnc.SysGetAttrValue('Rout_StackHt_User') > 0 then
      Fnc.SysSetAttrValue('Rout_StackHt', Fnc.SysGetAttrValue('Rout_StackHt_User'))
    else
      MessageDlg('Route Stack Height user override selected but value is 0', mtWarning, Setof([mbOK]) , 0);
  end;

  StepParamERP('Stack Height', Fnc.SysGetAttrValue('Rout_StackHt')); 
  //StepParamERP('Rout Lngth', Fnc.SysGetAttrValue('Rout_LengthPCB'),'); 

  if CustCode_Rule('Customer') = 'FA' then
    StepInstructionERP('ROUTE010'); //REMARK : Scale measurement

end;

procedure Piece_Chamfer_SD;
begin
  StepDeptERP('CHAMF-A');
  StepWCERP('CHAMF-A');
  StepParamERP('Chamfer Spec', Fnc.SysGetAttrValue('Chamfer_Spec'));
end;

procedure InkJet_SD;
begin
  StepDeptERP('JETMK-A');
  if (
      (Fnc.SysGetAttrValue('ProfileL3Str8') = true) or
      ((Fnc.SysGetAttrValue('PCB_Length') < 100) and (Fnc.SysGetAttrValue('PCB_Width') < 100)) or
      ((Fnc.SysGetAttrValue('PCB_Length') > 300) and (Fnc.SysGetAttrValue('PCB_Width') > 300))
     )
  then
    StepWCERP('JETMK-A0')
  else
    StepWCERP('JETMK-A');

  if CustCode_Rule('Customer') = 'FA' then
  begin
    if Fnc.SysGetAttrValue('Inkjet_Type') = 'INKJET-BTAB' then
      StepInstructionERP('JETMK005') // REMARK : 100% ON BREAKAWAY TAB”.
    else
      StepInstructionERP('JETMK002');  // REMARK : 100% on all cavity”
  end;

  //if ((Fnc.SysGetAttrValue('Cust_Code') = 'KRB') or (Fnc.SysGetAttrValue('Cust_Code') = 'PRB')) then
  if CustCode_Rule('Customer') = 'RB' then
    StepInstructionERP('JETMK001'); // REMARKS :MARK T" OR " MARK "T" & "H""; REFER TO CID.

  if ((Fnc.SysGetAttrValue('Board_Finish') = 'Immersion Tin') and (Fnc.SysGetAttrValue('LayupThickness') > 4)) then
       StepInstructionERP('JETMK006'); // Ensure no scratches on the ImmSn surface
end;

procedure DeWarp_SD;
begin
  StepDeptERP('DEWRP-A');
  StepWCERP('DEWRP-A');

  //Change request from Herole Feb 2016
  {if Fnc.SysGetAttrValue('Warpage_Type') = 'Percent' then
    StepParamERP('Warpage', FLoatToStr( Fnc.SysGetAttrValue('Warpage') ) + ' %',');
  else if Fnc.SysGetAttrValue('Warpage_Type') = 'MM' then
    StepParamERP('Warpage', FLoatToStr( Fnc.SysGetAttrValue('Warpage_mm') ) + ' MM','); }

  StepParamERP('Warpage', Fnc.SysGetAttrValue('Warpage_Str'));

end;

procedure Packing_SD;
begin
  StepDeptERP('PACKN-A');
  StepWCERP('PACKN-A');

  if ((CustCode_Rule('Customer') = 'BA') and (Fnc.SysGetAttrValue('LayupThickness') <= 1.0)) then
    StepInstructionERP('PAC0010'); // PUT STIFFENER TO PREVENT WARPAGE.
end;

procedure CMPlusCoating_SD;
begin
  StepDeptERP('CMPCO-A');
  StepWCERP('CMPCO-A0');
end;

procedure CZPretreat_SD;
begin
  StepDeptERP('RESCZ-A');
  StepWCERP('RESCZ-A0');
end;

procedure TwoDBarcode_SD;
begin
  StepDeptERP('LAS2D-A');
  StepWCERP('LAS2D-A');
end;


procedure CMPlusInspection_SD;
begin
  StepDeptERP('FINAL-A');
  StepWCERP('FINAL-A');
end;

procedure PreFinish_Insp_SD;
begin

  if Fnc.SysGetAttrValue('Board_Finish') = 'Immersion Tin' then
  begin
    StepDeptERP('FINSP-B');
    StepWCERP('FINSP-B');
  end
  else
  begin
    StepDeptERP('FINSP-A');
    StepWCERP('FINSP-A');
  end;

end;

procedure ImmTin_AlkRinse_SD;   // Immersion Tin Changes
begin
  StepDeptERP('ARINS-A');
  StepWCERP('ARINS-A');
end;

procedure OSP_Bake_Wash_SD;
begin                              
  StepDeptERP('WASHS-A');
  StepWCERP('WASHS-B0');
end;

procedure Imm_Silv_Taping_SD // (785) Selective Finger with Immersion silver Flow change
begin
  StepDeptERP('TAPNG-A');
  StepWCERP('TAPNG-A');
end;

procedure LFH_Taping_SD // 1355
begin
  StepDeptERP('TAPNG-A');
  StepWCERP('TAPNG-A');
end;

