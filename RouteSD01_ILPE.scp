//HeaderImportExport-->
//SiteId=0
//Enterprise=True
//ScriptType=0
//ScriptGroup=HCS
//HeaderImportExport<--
                                 uses
  Event_RouteGenLibrary,
  Eng_RouteFunctions,
  RouteFunctions,
  CT_ILPHOTO,
  CT_SearchLibrary;

procedure EGX_Missing_Steps;
begin
end;

procedure IL_Exposure_SD; // 2197
var
  Dept_Erp,
  Group_Erp,
  DesLine,                                              
  AltLine: string;
  Material : TStringlist;                    
begin
                              
  if MfgAttr('MfgPartType') = 'Inn' then
  begin

    Dept_Erp := '';
    Group_Erp := '';

    if ( SubLayersAreOnTopMfgPart ) or ( MfgAttrParent('Core_Build') ) then // Thin Core Remarks
    begin

      Dept_Erp := 'EXPIL-K';
      Group_Erp := 'EXPIL-K0';
      AltLine := 'Core Capping Build, Use LDI Machine Only';

    end;

    if ( GrandParentIsSequential ) or ( ParentIsSequential ) then
    begin

      Dept_Erp := 'EXPIL-K';
      Group_Erp := 'EXPIL-K0';
      AltLine := 'Sequential Build, Use LDI Machine Only';

      if SubLayersAreOnTopMfgPart or
         MfgAttrParent('Core_Build')  or
         ParentSubIsCoreBuild
      then
        AltLine := 'Seq/Core Capping Build, Use LDI Machine Only';

    end;

    // 2470 Non-Etch Pre-treatment Line
    //Use the rules above to get the correct AltLine value. Override the Dept & Group Value
    if MfgAttrTL('NonEtchPreTreatment') then
    begin

      Dept_Erp := 'EXPIL-T';
      Group_Erp := 'EXPIL-T';
      StepInstructionERP('EXPIL039');

    end;

    if Group_Erp = '' then // Not set by the rules above
    begin

      GetRes(Group_Erp, DesLine, AltLine); // Don't really need this table lookup any more. Table 2A is not used. Easily done with rules.

      if pos('-D', Group_Erp) > 0 then Dept_Erp := 'EXPIL-D';

      if pos('-K', Group_Erp) > 0 then
      begin

        Dept_Erp := 'EXPIL-K';
        AltLine := 'LDI Only';

      end;

    end;

    StepDeptERP(Dept_Erp);
    StepWCERP(Group_Erp);

    StepParamERP('Alt Line', AltLine);

    if HasFaradflexMat then StepParamERP('Remark', 'Faradflex Core, Panel Leader Taping needed');

    if ( SandwichCore ) and ( not MfgAttrTL('Alt_PEP_Process') ) then // 1470
      StepParamERP('4 Hole Alignment', 'X: ' + FloatToStr(MfgAttr('FourHoleAlign_X')) + 'mm / Y: ' +
                                               FloatToStr(MfgAttr('FourHoleAlign_Y')) + 'mm' );

    // 2367 Additional Attribute
    StepParamERP('CAD File Name', MfgAttr('CADFileName'));

    // 2659 CAD File for additional steps.
    // CAD File Name was originally only assigned to Inner Layers. Copying the Inner value to Top Level
    //ShowMessage(MfgAttrTL('CADFileName'));
    if MfgAttrTL('CADFileName') = '' then
      Fnc.SysSetAttrValueTopLevel('CADFileName', MfgAttr('CADFileName'));

    // 2743
    if MfgAttr('TightLineWidth') then StepParamERP('Remark', 'TIGHT LINEWIDTH CONTROL');

  end
  else //Dummy Core
  begin

    StepDeptERP('EXPIL-D');
    StepWCERP('EXPIL-D'); // // 2624 Obsolete Resource Code           
    StepParamERP('Alt Line', 'G2');

  end;
                                                          
  Material := TStringList.Create;
  Material.add('Core');
  StepMaterialsERP(Material, 1);
  Material.Free;

end;

procedure IL_Exposure_NonEtched_SD;
begin
  IL_Exposure_SD;
end;

procedure IL_DES_SD;
var

  Group_Erp,
  DesLine,
  AltLine: string;

begin

  if MfgAttr('MfgPartType') = 'Inn' then
  begin

    GetRes(Group_Erp, DesLine, AltLine);

    StepDeptERP('DESIL-D');
    StepWCERP(DesLine); 
    //StepParamERP('Alt Line', AltLine); 2197 
    if ( FindImpedanceSides = 'Outer' ) or ( FindImpedanceSides = 'Both' ) then    // 962 - Impedance Info
      StepParamERP('Impedance', 'Yes');
    else
      StepParamERP('Impedance', 'No'); 
      
    if  (CustCode_Rule('Customer') = 'FA') and
        ((MfgAttr('Line_Width') > 0.0) or (MfgAttr('Air_Gap') > 0.0))
    then
      StepInstructionERP('DESIL007'); //'Remark : Sampling check line width'

  end
  else
  begin  // Dummy Core

    StepDeptERP('DESIL-D');
    StepWCERP('DESIL-E');

  end;

  // 2743
  if MfgAttr('TightLineWidth') then StepParamERP('Remark', 'TIGHT LINEWIDTH CONTROL');                          

end;
                                                                                                                              
procedure HiPotTest_SD;
begin
  if MfgAttr('MfgPartType') = 'Inn' then
  begin
    StepDeptERP('HIPIL-A');
    StepWCERP('HIPIL-A');
  end
  else
  begin
    StepDeptERP('HIPOL-A');
    StepWCERP('HIPOL-A');
  end;
  
  
  // 1391 Add unit Name for Hi Pot Parameters
  if ((MfgAttr('Volt') > 0) and (MfgAttr('Ramp') > 0)) then
  begin
    StepParamERP('Volt', FloatToStr(MfgAttr('Volt')) + ' KV');
    StepParamERP('Ramp', IntToStr(MfgAttr('Ramp')) + ' V/sec');
                                                                                                                       
    Fnc.SysSetAttrValue('Wait', (MfgAttr('Volt') / MfgAttr('Ramp')) * 1000 ); // 1308
    StepParamERP('Wait', FloatToStr(MfgAttr('Wait')) + ' sec');

    if MfgAttr('Hold') > 0 then
      StepParamERP('Hold', IntToStr(MfgAttr('Hold')) + ' sec');                            
                                     
    if MfgAttr('Leak_New') > 0 then
      StepParamERP('Leak', IntToStr(MfgAttr('Leak_New')) + ' uA'); // 1308
  end;

end;                                                                                                                    

procedure IL_AOI_SD;
begin                         
  StepDeptERP('INSIL-A');
  StepWCERP('INSIL-A');

  if CustCode_Rule('Customer') = 'FA' then
    StepInstructionERP('INSIL004'); // "CROSS_OUT : NOT ALLOWED"
    
  // 2199 IL AOI Step Additional Info
  StepParamERP('Min Air Gap', MfgAttr('Air_Gap'));
  StepParamERP('Min Line Width', MfgAttr('Line_Width')); 
  StepParamERP('Thickness', FormatFloat('0.000',LayupThickness));
end;

procedure IL_PEP_SD;  // 1229 PEP Flow option for Sub-assembly build.
begin
  StepDeptERP('PEPOL-A');
  StepWCERP('PEPOL-A');
                                                                          
  //if CustCode_Rule('Customer') = 'FA' then
  //  StepInstructionERP('PEPOL010'); // “Check OPE location off-set”
    
  StepInstructionERP('PEPOL011');  // Remark PEP Sandwich cores only

end; 

procedure IL_SSP_SD;  // 1229 PEP Flow option for Sub-assembly build.
begin
  StepDeptERP('EXPSM-A');
  StepWCERP('EXPSM-A');
  StepInstructionERP('EXPSM012'); // Remarks: Measure PEP OffSet Value
  StepInstructionERP('EXPSM013'); // Send back panels to IL AOI for matching
  StepParamERP('Panel Size',MfgAttr('Panel_Size')); 
end;

procedure Core_Matching_SD;
begin

  StepDeptERP('COMIL-A0');
  StepWCERP('COMIL-A0');

end;
