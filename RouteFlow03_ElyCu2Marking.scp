//HeaderImportExport-->
//SiteId=0
//Enterprise=True
//ScriptType=0
//ScriptGroup=HCS
//HeaderImportExport<--
         uses                                                                                                                                                                                                                                                             
  Event_RouteGenLibrary, //Route System Scripts
  Eng_RouteFunctions, //Route System Functions
  RouteFlow04_Final,
  RouteFlow_Common,
  RouteFunctions;
          
procedure SideBySideDES;
begin
  AddStep('OL_SbS_DES1', 'OL_SbS_DES101');
  AddStep('OL_SbS_DES2', 'OL_SbS_DES201');
end;

procedure SubAssemblyPEP;  // 1229 PEP Flow option for Sub-assembly build.
begin
  AddStep('Scope_Drilling_PEP', 'Scope_Drilling_PEP01');
  AddStep('NC_Drill_PEP_Subs', 'NC_Drill_PEP_Subs_01'); 
end;

procedure OL_Pattern_Formation(EGoldB4Res : boolean);
begin
  // 793 Update Photo process rule
  if ( MfgAttr('LayupThickness') >= 4.2 ) and ( photoStepList.Count = 0 ) then  // 1570 After testing comment
  begin                                   
    AddStep('DM2_Buff', 'DM2_Buff01');
    AddStep('OffLine_PreTreat', 'OffLine_PreTreat00');
    AddStep('Clean_Room_Oven', 'Clean_Room_Oven01');
    AddStep('Man_DF_Lam', 'Man_DF_Lam01');
  end;                    
                     
  // 1108 OL Process Flow Update    
  if MfgAttr('LayupThickness') < 0.60 then // 1198 
  begin                                        
    //if SubGetsNewPEP then // 1229 PEP Flow option for Sub-assembly build.   2296
    //  SubAssemblyPEP;    
      
    AddStep('IL_Photo_OL_ThinPanel', 'IL_Photo_OL_ThinCore01');                              
    AddStep('IL_DES_OL_ThinPanel', 'IL_DES_OL_ThinPanel01');  
  end                                                 
  else if ((InProcessCuThk > 60) and (Fnc.HasImpedance)) then
  begin                 
    //ShowMessage(InProcessCuThk); 
    // 1108 OL Process Flow Update
    //if SubGetsNewPEP then // 1229 PEP Flow option for Sub-assembly build.   2296
    //  SubAssemblyPEP;
      
    AddStep('OL_Photo_PForm_TCI', 'OL_Photo_PForm_TCI01');
    AddStep('OL_DES_TCI', 'OL_DES_TCI01');  
                                    
    //SideBySideDES;                            
                                                                                                            
    if EGoldB4Res then     
    begin              
      if //(MfgAttr('Sel_Gold_Type') = 'Pattern (Overhang)') or 
         (MfgAttr('Sel_Gold_Type') = 'Pattern Overhang / PTH') or // 1256 Need to check this
         (MfgAttr('Board_Finish') = 'Full Body Gold') or
         (MfgAttr('Board_Finish') = 'Thin/Thick Au Plate') then // 1256 NEED TO CHECK THIS
        AddStep('Mdl_Insp', 'Mdl_Insp01')
      else
        AddStep('OL_AOI', 'OL_AOI01');
    end;
  end
  else              
  begin                 
    //if SubGetsNewPEP then // 1229 PEP Flow option for Sub-assembly build.
    //SubAssemblyPEP;                       
                   
    AddStep('OL_Photo_Patt_Form', 'OL_Photo_Patt_Form01');
    
    if ( EGoldB4Res ) and ( MfgAttr('Sel_Gold_Type') = 'BGA/LGA Encapsulation' ) then
      StepParamERP('Remark', 'Selective Etching Only.');
         
     // 793 Update Photo process rule
    if ( MfgAttr('EdgePlating') ) or 
       (
        (( MfgAttr('Slot_Length_PTH') >= 10.00 ) or ( MfgAttr('Max_Hole_Size') >= 10.00 )) and 
        ( MfgAttr('LayupThickness') >= 2.5 )
       )  // 1254 DES Rule Update
         // 983  Additional Condition to Edge Plating & Slot Length Rule
    then
    begin
      AddStep('OL_DEV', 'OL_DEV01');
      AddStep('Mdl_Insp_OLDev', 'Mdl_Insp_OLDev01');
    end;

    AddStep('OL_DES', 'OL_DES01');
    
    if  ( MfgAttr('Sel_Gold_Type') = 'BGA/LGA Encapsulation' ) or
        ( MfgAttr('Gold_Fgr_Type') = 'Lead Line Etching' ) or
        ( MfgAttr('Gold_Fgr_Type') = 'NO Lead Line Etching' ) or
        ( MfgAttr('Gold_Fgr_Type') = 'Soldermask Spray' ) 
        then
      AddStep('OL_AOI', 'OL_AOI01');                       
  end;
end;

function AOIForGoldPlating : boolean;
begin
  result := false;
  if ( MfgAttr('Board_Finish') = 'Full Body Gold' ) or
     ( MfgAttr('Board_Finish') = 'Thin/Thick Au Plate' ) or
     ( MfgAttr('Sel_Gold_Type') = 'Pattern Overhang / PTH' ) or
     ( MfgAttr('Sel_Gold_Type') = 'Gold Finger + Pattern Overhang / PTH' )
  then
    result := true;
end;
                   
procedure Gold_Photo2Plating(PltCycle : integer; DFStrip : boolean; B4Res : boolean);
begin
  if PltCycle = 1 then
  begin
    
    if ( MfgAttr('LayupThickness') >= 4.2 ) and ( photoStepList.Count = 0 ) then  // 1570 After testing comment
    begin                  
      AddStep('DM2_Buff', 'DM2_BuffGP');
      AddStep('OffLine_PreTreat', 'OffLine_PreTreatGP'); // 1570 Duplicate Unique ID error when BGA/LGA Encapsulation Selective Gold Type was selected
      AddStep('Clean_Room_Oven', 'Clean_Room_OvenGP');   // 1570 Duplicate Unique ID error when BGA/LGA Encapsulation Selective Gold Type was selected
      AddStep('Man_DF_Lam', 'Man_DF_LamGP');             // 1570 Duplicate Unique ID error when BGA/LGA Encapsulation Selective Gold Type was selected
    end;                                                
                 
    if B4Res then
      AddStep('Gold_Photo', 'Gold_Photo01')
    else                   
      AddStep('Gold_Photo_AR', 'Gold_Photo_AR01');
                                                                 
    AddStep('Gold_Develop', 'Gold_Develop01');
  end                            
  else if PltCycle = 2 then
  begin                                                  
    if B4Res then    
      AddStep('Gold_Photo', 'Gold_Photo02')
    else
      AddStep('Gold_Photo_AR', 'Gold_Photo_AR02');
                     
    AddStep('Gold_Develop', 'Gold_Develop02');
  end;                         
                                    
  // 1365 Lead Free HAL with Selective Gold Finishing
  if ( AOIForGoldPlating ) and ( PltCycle = 1 ) then
  begin
      AddStep('OL_AOI', 'OLAOIGoldPlating')
  end
  else
  begin
    if PltCycle = 1 then
      AddStep('Mdl_Insp', 'Mdl_Insp02')
    else if PltCycle = 2 then
      AddStep('Mdl_Insp', 'Mdl_Insp03');
  end;
                               
  if PltCycle = 1 then
    AddStep('Gold_Elytic_Plt1', 'Gold_Elytic_Plt101')
  else if PltCycle = 2 then
    AddStep('Gold_Elytic_Plt2', 'Gold_Elytic_Plt201');

  if DFStrip = true then
  begin                 
    if PltCycle = 1 then
      AddStep('Gold_Strip', 'Gold_Strip01')
    else if PltCycle = 2 then
      AddStep('Gold_Strip', 'Gold_Strip02')
  end;

end;

procedure SMaskGold_Photo2Plating(UVBump : boolean; Plating : boolean);
begin
  AddStep('Gold_SMPrint_SIT', 'Gold_SMPrint_SIT01'); // (722) Gold Steps Missing Info
  //AddStep('Gold_SMExp_SIT', 'Gold_SMExp_SIT01');
  //AddStep('Gold_SMDev_SIT', 'Gold_SMDev_SIT01');
  //AddStep('Gold_SMInsp_SIT', 'Gold_SMInsp_SIT01'); // This was deleted for Thin/Thick Enc Pattern in the Gold spreadsheet sent in October. Assumed this was an error

  if UVBump = true then
    AddStep('Gold_UVBump', 'Gold_UVBump01');

  if Plating = true then                                    
    AddStep('Gold_Elytic_Plt1', 'Gold_Elytic_Plt101');
end;

procedure Soldermask_Spray_Selective_Gold;
begin
  AddStep('ResSprayCoat_SF', 'ResSprayCoat_SF01');
  AddStep('ResistExp_Ledia', 'ResistExp_Ledia01');
  //AddStep('ResistDev_SF', 'ResistDev_SF01');    1256 Testing Request by Herole
  AddStep('ResSprayBaking_SF', 'ResSprayBaking_SF01'); 
  AddStep('OffLine_PreTreat', 'OffLine_PreTreat_SF01');
  
  if MfgAttr('Gold_Fgr_Type') <> 'Soldermask Spray' then
  begin
    AddStep('Gold_Elytic_Plt1', 'Gold_Elytic_Plt101');
    AddStep('ResistStrip_SF', 'ResistStrip_SF01'); 
  end;
end; 

procedure Alk_Lead_Line_Etching;
begin
  AddStep('AELL_Photo', 'AELL_Photo01');
  AddStep('AELL_Develop', 'AELL_Develop01');
  AddStep('Mdl_Insp', 'Mdl_Insp04');
  AddStep('AELL_Etch', 'AELL_Etch01');
  AddStep('AELL_Strip', 'AELL_Strip01');
end;
                                            
procedure Alkaline_DES;
begin
  AddStep('AE_Develop', 'AE_Develop01');
  AddStep('Mdl_Insp', 'Mdl_Insp05');
  AddStep('AE_Etch', 'AE_Etch01');
  AddStep('AE_Strip', 'AE_Strip01');
end;

procedure ElectrolyticGoldPlatingB4Resist;
begin
  if //(MfgAttr('Sel_Gold_Type') = 'Thin/Thick Encapsulated Pattern') or  1256
      //(MfgAttr('Sel_Gold_Type') = 'BGA, Encapsulation') or 1256
      //(MfgAttr('Gold_Fgr_Type') = 'Lead Line Etching B4 Res (Sel)') or 1256
      (MfgAttr('Gold_Fgr_Type') = 'Lead Line Etching') or
      //(MfgAttr('Gold_Fgr_Type') = 'No Horn - Lead Line Etching B4 Res (Sel)') or 1256
      //(MfgAttr('Gold_Fgr_Type') = 'Chamfer B4 Res (Sel)') or 911 - Change Chamfer B4 Res (Sel) name to Finger Au After Pattern (Sel)
      //(MfgAttr('Gold_Fgr_Type') = 'After Pattern (Sel)') //or  1256
      (MfgAttr('Gold_Fgr_Type') = 'NO Lead Line Etching') or
      //(MfgAttr('Gold_Fgr_Type') = 'Thin/Thick - Lead Line Etching B4 Res (Sel)') or 1256
      //(MfgAttr('Gold_Fgr_Type') = 'Thin/Thick - Chamfer B4 Res (Sel)') 
      //(MfgAttr('Gold_Fgr_Type') = 'Thin/Thick - After Pattern (Sel)') 1256
      (MfgAttr('Sel_Gold_Type') = 'BGA/LGA Encapsulation') or
      (MfgAttr('Gold_Fgr_Type') = 'Soldermask Spray') 
  then
  begin //Common Steps for the above                      
      OL_Pattern_Formation(true);
      
      if MfgAttr('Gold_Fgr_Type') <> 'Soldermask Spray' then 
        Gold_Photo2Plating(1, true, true);      
  end;

  //if MfgAttr('Gold_Fgr_Type') = 'Lead Line Etching B4 Res (Sel)' then 1256
  if MfgAttr('Gold_Fgr_Type') = 'Lead Line Etching' then
    Alk_Lead_Line_Etching; 

  // else if MfgAttr('Gold_Fgr_Type') = 'Chamfer B4 Res (Sel)' then  911
  // else if MfgAttr('Gold_Fgr_Type') = 'After Pattern (Sel)' then  1256
  else if MfgAttr('Gold_Fgr_Type') = 'NO Lead Line Etching' then 
  begin
  //Nothing Required                   
  end                    

  {else if MfgAttr('Sel_Gold_Type') = 'Thin/Thick Encapsulated Pattern' then
  begin
    Gold_Photo2Plating(2, true, true);
    Alk_Lead_Line_Etching;
  end;} // 1256

  else if  //(MfgAttr('Sel_Gold_Type') = 'Pattern (Overhang)') or
           (MfgAttr('Sel_Gold_Type') = 'Pattern Overhang / PTH') or //Need to check this
           (MfgAttr('Sel_Gold_Type') = 'Gold Finger + Pattern Overhang / PTH') or
           (MfgAttr('Board_Finish') = 'Full Body Gold') or
           (MfgAttr('Board_Finish') = 'Thin/Thick Au Plate') or
           (MfgAttr('Sel_Gold_Type') = 'Soldermask Spray') or
           //(MfgAttr('Board_Finish') = 'Full Body Gold + LGA')  1256
           (MfgAttr('Sel_Gold_Type') = 'BGA/LGA Encapsulation') or
           (MfgAttr('Gold_Fgr_Type') = 'Soldermask Spray') 
  then           
  begin
    {if MfgAttr('Board_Finish') = 'Full Body Gold + LGA' then
    begin                  
      AddStep('OL_Photo_LGA', 'OL_Photo_LGA01');
      AddStep('OL_DES_LGA', 'OL_DES_LGA01');
      AddStep('OL_AOI', 'OL_AOI03');
    end; 1256 }        
    if ( MfgAttr('Sel_Gold_Type') = 'Soldermask Spray' ) or 
       ( MfgAttr('Gold_Fgr_Type') = 'Soldermask Spray' )  then
      Soldermask_Spray_Selective_Gold;
      
    if ( MfgAttr('Sel_Gold_Type') <> 'Soldermask Spray' ) and
       (MfgAttr('Sel_Gold_Type') <> 'BGA/LGA Encapsulation' ) then
      Gold_Photo2Plating(1, true, true);
      
    if MfgAttr('Gold_Fgr_Type') = 'Soldermask Spray' then
      AddStep('ResistStrip_SF', 'ResistStrip_SF01');
    
    if MfgAttr('Board_Finish') = 'Thin/Thick Au Plate' then
      Gold_Photo2Plating(2, true, true);
                                         
    //1256
    if (MfgAttr('Board_Finish') = 'Full Body Gold') or  (MfgAttr('Board_Finish') = 'Thin/Thick Au Plate') then
      AddStep('HoleTent_Photo', 'HoleTent_Photo01')
    else if (MfgAttr('Sel_Gold_Type') = 'Pattern Overhang / PTH') or 
            (MfgAttr('Sel_Gold_Type') = 'Gold Finger + Pattern Overhang / PTH') or
            (MfgAttr('Sel_Gold_Type') = 'Soldermask Spray' ) or
            (MfgAttr('Sel_Gold_Type') = 'BGA/LGA Encapsulation')
    then
      AddStep('AlkEtchPatt_Photo', 'AlkEtchPatt_Photo01')
    else if ( MfgAttr('Gold_Fgr_Type') = 'Soldermask Spray' ) then
      AddStep('AELL_Photo', 'AELL_Photo01');
     
    Alkaline_DES;  
  end           

  {else if MfgAttr('Sel_Gold_Type') = 'PTH' then
  begin
    Gold_Photo2Plating(1, true, true);
    AddStep('AlkEtchPatt_Photo', 'AlkEtchPatt_Photo01');
    Alkaline_DES;                    
  end;} //1256                     

  {else if MfgAttr('Sel_Gold_Type') = 'BGA, Encapsulation' then
  begin
    //AddStep('Visual_Insp');
  end;} // 1256
                              
  {else if MfgAttr('Gold_Fgr_Type') = 'No Horn - Lead Line Etching B4 Res (Sel)' then
  begin                
    Gold_Photo2Plating(1, true, true);
    Alk_Lead_Line_Etching;
  end; } //1256

  {else if MfgAttr('Gold_Fgr_Type') = 'Thin/Thick - Lead Line Etching B4 Res (Sel)' then
  begin                                                                                
    Gold_Photo2Plating(2, true, true);
    Alk_Lead_Line_Etching;
  end;} //1256                  
                                                       
  // else if MfgAttr('Gold_Fgr_Type') = 'Thin/Thick - Chamfer B4 Res (Sel)' then 911
  {else if MfgAttr('Gold_Fgr_Type') = 'Thin/Thick - After Pattern (Sel)' then
  begin
    Gold_Photo2Plating(2, true, true); 
  end;} // 1256 

End;

function Epoxy_US(process: string; seq_no: integer) : string;
begin                  
  case process of
    'A' : AddStep('Epoxy_PlugA', 'Epoxy_PlugA0' + IntToStr(seq_no));
    'B' : AddStep('Epoxy_PlugB', 'Epoxy_PlugB0' + IntToStr(seq_no));
    'b' : AddStep('EpoxyPlug_Buffing', 'EpoxyPlug_Buffing0' + IntToStr(seq_no));
  end;
end;

function Epoxy_Plug_Process : string;  // 1463
begin
  result := MfgAttr('EpoxyPlug_Process');
  
  if result = 'Auto' then
  begin                      
    if MfgAttr('MfgPartType') <> 'Top' then
      result := 'Standard'
    else
    begin
      if MfgAttr('EpoxyPlug_PlugToNonPlugSpacing') < 1.0 then
      begin     
        if MfgAttr('LayupThickness') > 2.0 then
          result := 'Side-by-Side'
        else
          result := 'Standard';
      end              
      else           
      begin                                                                          
        if MfgAttr('LayupThickness') > 3.0 then
          result := 'Side-by-Side'
        else
          result := 'Standard';
      end;
    end;
  end;
end;
                                                                      
procedure Epoxy_Plugging;
var                                                                
  User_Seq : string;
  User_Seq_Length : integer;      
  i : integer;
  Process : string;
begin
  Process := '';
  
  if MfgAttr('BackDrill_Epoxy') then  // 1258 Additional pre-baking b4 Epoxy Plugging 
    AddStep('Epoxy_Plug_PreBake_BackDrill', 'Epoxy_Plug_PreBake_BackDrill01'); 
    
  if  ( MfgAttr('BackDrill_Epoxy') = false ) or
      (( MfgAttr('EpoxySide') <> 'None' ) and ( MfgAttr('BackDrill_Epoxy') = true  ))
  then // 844 Back Drill After Electrolytic Cu
  begin
    // Determine if process is Standard or Side-by-Side 1463
    if Epoxy_Plug_Process = 'Standard' then 
    begin        
      User_Seq := MfgAttr('EpoxyPlug_US');
  
      if User_Seq = 'Default' then
      begin             
        case MfgAttr('EpoxySide') of                      
          'Epoxy Side A' : AddStep('Epoxy_PlugA', 'Epoxy_PlugA01');
          'Epoxy Side AB' : begin AddStep('Epoxy_PlugA', 'Epoxy_PlugA01'); AddStep('Epoxy_PlugB', 'Epoxy_PlugB'); end;
          'Epoxy Side B' : AddStep('Epoxy_PlugB', 'Epoxy_PlugB01');
          'Epoxy Side BA' : begin AddStep('Epoxy_PlugB', 'Epoxy_PlugB01'); AddStep('Epoxy_PlugA', 'Epoxy_PlugA01'); end;
        end;                
      end
      else
      begin
        for i := 1 to length(User_Seq) do
        begin
          Epoxy_US(copy(User_Seq, i, 1), i);
        end;
      end;
    end
    else if Epoxy_Plug_Process = 'Side-by-Side' then // 1463
    begin                           
      AddStep('Epoxy_PlugA_SS', 'Epoxy_PlugASS01');
      AddStep('Epoxy_PlugB_SS', 'Epoxy_PlugBSS01');
    end;
  end
  else if MfgAttr('EpoxySide') = 'None' then // 844 Back Drill with Epoxy Only
  begin
    if BKDRwEpoxyBot then
      AddStep('Epoxy_PlugA', 'Epoxy_PlugA01');

    if BKDRwEpoxyTop then
      AddStep('Epoxy_PlugB', 'Epoxy_PlugB01');
  end;
  
  if MfgAttr('EpoxyPlug_CuThin_Process') <> 'None' then
    begin
      if MfgAttr('EpoxyPlug_CuThin_Process') = 'Buffing' then
        AddStep('EpoxyPlug_CT_Buffing1', 'EpoxyPlug_CT_Buffing101')
      else if MfgAttr('EpoxyPlug_CuThin_Process') = 'Micro-Etch + Buffing' then
      begin
        AddStep('EpoxyPlug_MicroEtch', 'EpoxyPlug_MicroEtch01');
        AddStep('EpoxyPlug_CT_Buffing1', 'EpoxyPlug_CT_Buffing101');
      end
      else if MfgAttr('EpoxyPlug_CuThin_Process') = 'Buffing + Mirco-Etch + Buffing' then
      begin
        AddStep('EpoxyPlug_CT_Buffing1', 'EpoxyPlug_CT_Buffing101');
        AddStep('EpoxyPlug_MicroEtch', 'EpoxyPlug_MicroEtch01');
        AddStep('EpoxyPlug_CT_Buffing2', 'EpoxyPlug_CT_Buffing201');
      end;
      
      if ( MfgAttr('EpoxyPlug_CuThin_Process') = 'Micro-Etch + Buffing' ) or 
         ( MfgAttr('EpoxyPlug_CuThin_Process') = 'Buffing + Mirco-Etch + Buffing' )
      then
      begin
        if MfgAttr('LayupThickness') > 4.0 then // 1112 Micro-etch for thick board 
          MessageDlg('Board too thick for Epoxy Plug standard Micro-etch process.', mtWarning, Setof([mbOK]), 0); 
      end;
    end;
    
    // InProcessCuThk := Cu_Thk_After_EP; // (364) Surface Cu thickness calculation correction 
    UpdateInProcessCuThk(Cu_Thk_After_EP);
end;

procedure Primary_Plug;
begin
  case MfgAttr('SMPlugType') of
    'Primary SM Plug A' : AddStep('Primary_PlugA', 'Primary_PlugA01');
    'Primary SM Plug AB' : begin AddStep('Primary_PlugA', 'Primary_PlugA01'); AddStep('Primary_PlugB', 'Primary_PlugB01'); end;
    'Primary SM Plug B' : AddStep('Primary_PlugB', 'Primary_PlugB01');
    'Primary SM Plug BA' : begin AddStep('Primary_PlugB', 'Primary_PlugB01'); AddStep('Primary_PlugA', 'Primary_PlugA01'); end;
  end;

  if MfgAttr('PrimaryPlugProcess') = 'Before Pattern' then   // 841 Primary Plu B4 Pattern Cu Thinning Step
  begin
    if MfgAttr('PrimaryPlug_CuThin_Process') = 'Buffing' then
      AddStep('PrimaryPlug_CT_Buffing1', 'PrimaryPlug_CT_Buffing101');

    // InProcessCuThk := Cu_Thk_After_PP;
    UpdateInProcessCuThk(Cu_Thk_After_PP);
  end;

end;

procedure SolderMask;
begin
  if not HardGoldB4Resist then // 1305 Additional condition for CZ Pre-Treatemnt  
  begin                           
    if FinishGetsCZPreTreat then
    begin                         
      if MfgAttr('LayupThickness') <= 3.20 then
      begin                                 
        AddStep('OffLine_PreTreat', 'OffLine_PreTreatSM01');
        AddStep('CZPretreat', 'CZPretreat01');
      end      
      else                   
      begin                             
        AddStep('DM2_Buff', 'DM2_BuffSM01');
        AddStep('OffLine_PreTreat', 'OffLine_PreTreatSM01'); 
      end;                           
    end                               
    else
    begin
      if MfgAttr('CZPreTreat') then 
        AddStep('CZPretreat', 'CZPretreat01');
    end;
  end;                        
                           
  if ((MfgAttr('Min_Res_Th') > 40) or (MfgAttr('TwoXResist') = true)) then
  begin

    if MaskType = 'PSR2000-SP300HFM'then
      AddStep('ResSprayCoat2X1', 'ResSprayCoat2X101')
    else
      AddStep('ResScreenPrint2X1', 'ResScreenPrint2X101');
                  
    if MfgAttr('TwoXResist_Ink') = 'PSR2000-SP300HFM' then
      AddStep('ResSprayCoat2X2', 'ResSprayCoat2X201')
    else
      AddStep('ResScreenPrint2X2', 'ResScreenPrint2X201');

    AddStep('ResistExp2X', 'ResistExp2X01');

    if GetsInkJetLegend = true then
      AddStep('InkJet_Legend', 'InkJet_Legend01');
              
    AddStep('ResistPostCure2X', 'ResistPostCure2X01');

  end
  else if BlueRedResist then   // 1111
  begin
    AddStep('ResScreenPrint2X1', 'ResScreenPrint2X1BR01');
    AddStep('Resist_Semi_Cure', 'ResistSemiCure01');
    AddStep('Resist_Exposure2X1', 'Resist_Exposure2X101');
    AddStep('Resist_Semi_Final_Cure', 'ResistSemiFinalCure01');
    AddStep('OffLine_PreTreat', 'OffLine_PreTreatBR01');
    AddStep('ResScreenPrint2X2', 'ResScreenPrint2X2BR01');
    AddStep('Resist_Semi_Cure', 'ResistSemiCure02');
    AddStep('Resist_Exposure2X2', 'Resist_Exposure2X201');
    AddStep('ScreenPrintBaking', 'ScreenPrintBaking01');
  end                                                              
  else
  begin
    if ScreenPrintResist = true then
    begin                           
      AddStep('ResScreenPrint', 'ResScreenPrint01');
      AddStep('ResScreenPrint2', 'ResScreenPrint201'); // Resist Printing Step with dual info

      if GetsInkJetLegend = true then      
        AddStep('InkJet_Legend', 'InkJet_Legend01');

      AddStep('ScreenPrintBaking', 'ScreenPrintBaking01');
    end               
    else // If not Screen Print Resist, it must be Spray Coat
    begin
      AddStep('ResSprayCoat', 'ResSprayCoat01');

      if GetsInkJetLegend = true then
        AddStep('InkJet_Legend', 'InkJet_Legend01');

      AddStep('ResSprayBaking', 'ResSprayBaking01');
    end;
  end;

  // (804) UV Process Step after Resist for ENIG/ENEPIG
  if ( MfgAttr('Board_Finish') = 'ENIG' ) or
     // ( MfgAttr('Board_Finish') = 'ENIG + OSP' ) or // 1173 Additional Surface Finishing. Selective ENIG + OSP 
     ( ENIGplusOSP ) or
     ( MfgAttr('Board_Finish') = 'ENEPIG' ) then
    AddStep('UV_Cure', 'UV_Cure01');

end;
               
procedure MarkingPrintProcess;
begin

  if ((MfgAttr('Marking_B') <> 'None') and (MfgAttr('Marking_B') <> 'INKJET LEGEND')) then
    AddStep('MarkingPrint_B', 'MarkingPrint_B01');

  if MfgAttr('Marking_B1') <> 'None' then
    AddStep('MarkingPrint_B1', 'MarkingPrint_B101');

  if ((MfgAttr('Marking_A') <> 'None') and (MfgAttr('Marking_A') <> 'INKJET LEGEND')) then
    AddStep('MarkingPrint_A', 'MarkingPrint_A01');
                                
  if MfgAttr('Marking_A1') <> 'None' then
    AddStep('MarkingPrint_A1', 'MarkingPrint_A101');

end;

procedure ENIG_AlkRinseMicroEtch;
begin
  AddStep('ENEPIG_AlkRinse', 'ENEPIG_AlkRinse01');

  if (
      ( MfgAttr('CappedVia') = false ) or
      ( MfgAttr('CappedVia') = true ) and ( MfgAttr('Min_Surf_Plt') >= 18 )
     ) then
    AddStep('ENIG_MicroEtch', 'ENIG_MicroEtch01');

  AddStep('OffLine_PreTreatNI', 'OffLine_PreTreatNI');

end;

procedure ENIG_ENEPIG;
var
  SelectiveENIG : boolean;
begin
  SelectiveENIG := false;
  if ( MfgAttr('Sel_Gold_Type') <> 'None' ) or 
     ( MfgAttr('Gold_Fgr_Type') <> 'None' ) or
     //( MfgAttr('Board_Finish') = 'ENIG + OSP' )  // 1173 Additional Surface Finishing. Selective ENIG + OSP
     ( ENIGplusOSP )  // 1256
  then
    SelectiveENIG := true;

  if BakingDone = false then
    Baking;

  if MfgAttr('Board_Finish') = 'ENEPIG' then
  begin
    if (( HasSolderMaskType('DSR330S-50-99R') ) or ( HasSolderMaskType('PSR2000-SP300HFM') )) then
         ENIG_AlkRinseMicroEtch
    else
    begin                                    // Invalid SolderMasks checked at route master
      AddStep('ENEPIG_Plasma', 'ENEPIG_Plasma01');
      AddStep('ENEPIG_AlkRinse', 'ENEPIG_AlkRinse01');
      AddStep('ENEPIG_ILPhotoPT', 'ENEPIG_ILPhotoPT01');
    end;
  end
  else if ( MfgAttr('Board_Finish') = 'ENIG' ) or ( ENIGplusOSP ) then  // 1173 Additional Surface Finishing. Selective ENIG + OSP // 1256 
  begin
    if (( ThicknessOverMask >= 2.2 ) and ( ThicknessOverMask <= 3.0 )) then
      ENIG_AlkRinseMicroEtch;
    else
    begin
      if ThicknessOverMask <= 3.0 then
      begin
        if ThicknessOverMask < 2.2 then
        begin
          if ( MfgAttr('CZPreTreat') = true ) or  // 1177 Update Soldermask Pre-Treatment
             ( FinishGetsCZPreTreat ) and ( MfgAttr('LayupThickness') <= 3.20 )
          then
            ENIG_AlkRinseMicroEtch
          else if (( HasSolderMaskType('PSR4000-AM10') ) or ( HasSolderMaskType('PSR4000-BNDG') )) then
          begin
            if ThicknessOverMask <= 3.0 then
              ENIG_AlkRinseMicroEtch;
          end
          else
            AddStep('OffLine_PreTreatNI', 'OffLine_PreTreatNI01');
        end;
      end
      else if (( HasSolderMaskType('PSR4000-AM10') ) or ( HasSolderMaskType('PSR4000-BNDG') )) then
      begin
        if ThicknessOverMask <= 3.0 then
          ENIG_AlkRinseMicroEtch;
      end
      else
        AddStep('OffLine_PreTreatNI', 'OffLine_PreTreatNI01');
    end;

    if SelectiveENIG then
    begin
      AddStep('ENIG_Photo', 'ENIG_Photo01');
      AddStep('ENIG_Develop', 'ENIG_Develop01');
      AddStep('OL_AOI', 'OL_AOI05');
    end;

  end;

  if ( MfgAttr('Board_Finish') = 'ENIG' ) or ( ENIGplusOSP ) then  // 1173 Additional Surface Finishing. Selective ENIG + OSP // 1256 
    AddStep('ENIG', 'ENIG01')
  else if MfgAttr('Board_Finish') = 'ENEPIG' then
    AddStep('ENEPIG', 'ENEPIG01');

  if SelectiveENIG then
    AddStep('Gold_Strip', 'Gold_Strip02');

end;

procedure RouteFlow03;
Var
  T_MIN_TH: float;
begin                         
  HoleCheckDone := false; //ENIG Changes
  {Electrolytic Copper Steps}
  if (( MfgAttr('CuFilledVias')) and ( NCRun = 1 )) then 
  begin
    if MfgAttr('Aspect_Ratio_Val') > 6 then
    begin
      if ( MfgAttr('Abs_Min_Th') > 18 ) or 
         ( MfgAttr('Ave_Min_Th') > 20 ) or 
         ( MfgAttr('Aspect_Ratio_Val') > 8 ) or
         ( CustCode_Rule('Customer') = 'FA' ) // 1260 Updated Cu Via Filling Rule 
      then  // 1086 - Electrolytic Cu Plating Line Selection from Flowchart
        AddStep('Flash_Plating', 'Flash_Plating01');
    end;
  end;
                                         
  AddStep('Electrolytic_Cu_1', 'Electrolytic_Cu_1' + '0' + IntToStr(MetalizationRun));

  if ((RequiredPlatingThk > 41) and (MfgAttr('CuFilledVias') = false)) then
    AddStep('Electrolytic_Cu_2', 'Electrolytic_Cu_201');


  if (  // Hole Check After Plating 
      (( MfgAttr('CuPlatingLine') = 'PAL4' ) or ( MfgAttr('CuPlatingLine') = 'PAL5' ) or ( MfgAttr('CuPlatingLine') = 'PAL6' )) or
      (( MfgAttr('Min_Drill_Size') <= 0.25 ) and ( MfgAttr('CuPlatingLine') = 'MCP' )) or
      (( MfgAttr('NCRunX2') = false ) and ( MfgAttr('EpoxySide') <> 'None' ))
     )         
  then
    AddStep('CuHoleCheck', 'CuHoleCheck' + '0' + IntToStr(MetalizationRun));
    
  if ( MfgAttr('Pre_Photo_CuThin') ) then
  begin 
    if ( MfgAttr('NCRunX2') = true ) or ( MfgAttr('EpoxyPlug_CuThin_Process') = 'None' ) then  // 1196 Pre-Photo Cu Thinning
    begin
      AddStep('Pre_Photo_Cu_Thin', 'Pre_Photo_Cu_Thin01');
      //InProcessCuThk := ConvertStrtoInt( MfgAttr('Pre_Photo_CuThin_Spec') );
      UpdateInProcessCuThk(ConvertStrtoInt( MfgAttr('Pre_Photo_CuThin_Spec') ));
    end; 
  end;

  if (( MfgAttr('BackDrill_Epoxy') ) and ( MfgAttr('NCRunX2') = false )) then // 844 Backdrill after Electrolytic Cu
    Back_Drill_Epoxy;                
                          
  if (
      (                    
       ( MfgAttr('CappedVia') = true ) or
       ( MfgAttr('EpoxySide') <> 'None' ) or                                                                                            
       ( MfgAttr('BackDrill_Epoxy') = true ) // 844 Backdrill after Electrolytic Cu
      )                     
      and ( MfgAttr('NCRunX2') = false )
     )
  then
  begin                                    
    if (( MfgAttr('EpoxySide') <> 'None' ) or ( MfgAttr('BackDrill_Epoxy') = true  )) then
      Epoxy_Plugging;

    if MfgAttr('CappedVia') = true then
    begin
    {Ink Plug with Flash Steps}
    // Specific Instructions and Route step parames required. Add Here instead of step rule
      AddStep('Desmear_CappedVia', 'Desmear_CappedVia01');
      AddStep('Electroless_CappedVia', 'Electroless_CappedVia01');
      AddStep('Electrolytic_CappedVia', 'Electrolytic_CappedVia01');
    end;
  end
  else
  begin
    if MfgAttr('PrimaryPlugProcess') = 'Before Pattern' then
      Primary_Plug;
  end;

  if MfgAttr('MfgPartType') = 'Top' then
  begin
    if HardGoldB4Resist 
    then
      ElectrolyticGoldPlatingB4Resist
    else
      OL_Pattern_Formation(false);     
  end                 
  else
    OL_Pattern_Formation(false);
                               
  if ((MfgAttr('Design_Type') = 'Flip Chip') and (MfgAttr('Tented_Via') = true)) then
  begin                   
    AddStep('Panel_EC', 'Panel_EC01');
    
    if MfgAttr('LayupThickness') < 0.60 then  // 1198 OL Process Flow Update 
      AddStep('IL_AOI_OL_ThinPanel', 'IL_AOI_OL_ThinPanel06') // 1108 OL Process Flow Update
    else
      AddStep('OL_AOI', 'OL_AOI06');
      
  end
  else
  begin                 
                    
    if MfgAttr('LayupThickness') < 0.60 then   // 1108 OL Process Flow Update  // 1198 OL Process Flow Update 
      AddStep('IL_AOI_OL_ThinPanel', 'IL_AOI_OL_ThinPanel06')
    else
      AddStep('OL_AOI', 'OL_AOI06');
      
    if ((MfgAttr('EC_Type') = 'Panel - Before Primary') or (MfgAttr('EC_Type') = 'Panel - Before Primary Routing')) then
      AddStep('Panel_EC', 'Panel_EC01');
  end;                    

  if MfgAttr('MfgPartType') = 'Top' then  //Assuming Subs/Drilled Inners end here
  begin 
  
    if MfgAttr('PrimaryPlugProcess') = 'After Pattern' then
    Primary_Plug;

    if Engx_SMCount > 0 then
      Soldermask;
      
    if  //(MfgAttr('Gold_Fgr_Type') = 'Lead Line Etching Af Res (Sel)') or 1256
        (MfgAttr('Gold_Fgr_Type') = 'Au Finger Plate after SM') //or
        // (MfgAttr('Gold_Fgr_Type') = 'Chamfer Af Res (Sel)')  1256
    then
    begin                          
      Gold_Photo2Plating(1, true, false);
                
      {if MfgAttr('Gold_Fgr_Type') = 'Lead Line Etching Af Res (Sel)' then  1256
      begin   
        Alk_Lead_Line_Etching;          
        AddStep('OL_AOI', 'OL_AOI07');
      end     
      else}
        AddStep('OL_AOI', 'OL_AOI07');
    end;                                                                                                

    if ( MfgAttr('Board_Finish') = 'ENIG' ) or 
       //( MfgAttr('Board_Finish') = 'ENIG + OSP' ) or // 1173 Additional Surface Finishing. Selective ENIG + OSP 
       ( ENIGplusOSP ) or // 1256
       ( MfgAttr('Board_Finish') = 'ENEPIG' )
    then
    begin                   
      AddStep('Hole_Check', 'Hole_Check01');
      HoleCheckDone := true;
                                            
      ENIG_ENEPIG;            
                                                
      if UVMarking = true then
        MarkingPrintProcess;

      ENIG_NFluxDone := true; //Check if this still needs to be done
    end
    else                               
    begin                         
      if UVMarking = true then
        MarkingPrintProcess 
      else if Engx_SMCount > 0 then
        AddStep('UV_Cure', 'UV_Cure01');
    end;

    if MfgAttr('BaseCu_Marking') = true then
      AddStep('BaseCuMarking_Wash', 'BaseCuMarking_Wash01');
                                 
    if UVMarking = false then                       
      MarkingPrintProcess;       
             
    if ( MfgAttr('Board_Finish') = 'Immersion Silver' ) and
       ( SelectiveGoldorFinger ) and
       ( MfgAttr('Imm_Silver_Process') = 'Photo' ) then
    begin                
      AddStep('Hole_Check', 'Hole_Check01');
      HoleCheckDone := true;
      Immersion_Silver_Sel_Gold('Photo');
    end;
                            
    if ( MfgAttr('Board_Finish') = 'Lead Free HAL' ) and
       ( SelectiveGoldorFinger ) and
       ( MfgAttr('Lead_Free_HAL_Process') = 'Photo' ) then
    begin                      
      Lead_Free_HAL_Sel_Gold('Photo'); // 1355
    end;
                               
    RouteFlow04;                                                  

  end;

End;
