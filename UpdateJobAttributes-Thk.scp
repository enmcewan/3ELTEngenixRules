//HeaderImportExport-->
//SiteId=0
//Enterprise=True
//ScriptType=0
//ScriptGroup=
//HeaderImportExport<--
uses
  RouteFunctions;

procedure updateJobAttribute(jbID : integer; att : string; attVal : variant);
var
  Qry : TADOQuery;
  newVal : float;

begin
  //ShowMessage(IntToStr(jbID) + ' ' + att + ' ' + attVal);
  Qry := TAdoQuery.Create(nil);
  Qry.Connection := Fnc.DbConnection;
  Qry.SQL.Clear;

  Qry.SQL.Add('SELECT * from JobAnswers');
  Qry.SQL.Add('WHERE JobID = ' + jbID + ' AND JobAttributeID = 34');
  Qry.Open
  //Fnc.OpenDataGrid(Qry);

  Qry.first;
  if Qry.IsEmpty then //no record exists
  begin
    newVal := attVal + 0.04; // Add Soldermask Thickness
    Qry.Append;
    Qry.FieldByName('JobAttributeID').AsInteger := 34;
    Qry.FieldByName('JobID').AsInteger := jbID;
    Qry.FieldByName('EntryValue').AsString := formatFloat('0.00', newVal);
    Qry.Post;
  end;

  Qry.Close;
  Qry.Free;
end;

procedure getJobAnswers;
var
  Qry : TADOQuery;
  tbl : TSysTable;

  jobAttributes : TSysTable;

begin

  Qry := TAdoQuery.Create(nil);
  Qry.Connection := Fnc.DbConnection;
  Qry.SQL.Clear;

  Qry.SQL.Add('SELECT * from CUST_JOBPARTATTRIBUTES ');
  Qry.SQL.Add('WHERE PARTTYPE = ' + QuotedStr('MFGTP') + ' AND ATTRIBUTENAME = ' + QuotedStr('LayupThickness') );
  Qry.SQL.Add(' ORDER BY ' + QuotedStr('JobID') );
  Qry.Open;
  //Fnc.OpenDataGrid(Qry);
  Qry.First;

  While not Qry.EOF do
  begin
    updateJobAttribute(Qry.FieldByName('JobID').AsString, Qry.FieldByName('ATTRIBUTENAME').AsString, Qry.FieldByName('VALUE').AsString);
    Qry.Next;
  end;

  Qry.Close;
  Qry.Free;

end;

begin
  getJobAnswers;
end;
