//HeaderImportExport-->
//SiteId=0
//Enterprise=True
//ScriptType=0
//ScriptGroup=HCS
//HeaderImportExport<--
uses
  Event_RouteGenLibrary, //Route System Scripts
  Eng_RouteFunctions, //Route System Functions
  RouteFunctions, //Custom Functions for HCS
  RouteFunctions_Drilling,
  RouteFlow03_ElyCu2Marking,
  RouteFlow_Common,
  CT_SearchLibrary,
  CT_PreBook,          
  CT_Desmear;

{procedure Pin_Bond; // No longer used after 2472
begin

  AddStep('Pin_Bond', 'Pin_Bond01');

  if (
      (NumOfCores >= 4) or    // 4-13 not required as > 13 will be Pin Lam
      ((NumOfCores = 3) and (Fnc.SysGetAttrValue('Panel_Width') > 460))
     )
  then
  begin

    if NumOfCores <= 8 then
      AddStep('Riveting', 'Riveting01'); // Riveting X4 or X2 done at the route step detail
    else
    begin

      AddStep('Riveting', 'Riveting01');

      if HasSlippage = true then
      begin

        if ((NumOfCores <= 8) and (PressThickness <= 2.3)) then
          AddStep('PlasticEye_Riveting', 'PlasticEye_Riveting01');

      end;

    end;

  end;

end;}

procedure Booking;
var

  PBookLine,
  AltLine,
  FamTop,
  FamBot: string;

begin

  {OXIDE (K-Treatment) Steps}
  if LayupCoreCount >= 2 then  // 1229 PEP Flow Option for Sub-Assembly Build
    if TopLevelGetsPEP then AddStep('PEP', 'PEP01');


  if (( PressCycleMoreThan1 ) and ( MatPreOxideBake )) or
     (( HasN13Material ) and ( MechBlindViaSide <> 'None' )) or  // Mech Blind Vias
     (( HasMultipleSubAssemblies ) and ( MatPreOxide24HrBake ))
  then
  begin  // 1229 PEP Flow Option for Sub-Assembly Build

    AddStep('Pre_Oxide_Baking', 'Pre_Oxide_Baking01');
    
    if not TopLevelGetsPEP then AddSubsAndInnersAtStep
    else if LayupCoreCount < 2 then AddSubsAndInnersAtStep;
      
    if MfgAttrTL('NonEtchPreTreatment') then AddStep('NonEtchPreTreatment', 'NonEtchPreTreatment01') // 2470
    else AddStep('Oxide', 'Oxide01');

  end
  else             
  begin

    if MfgAttrTL('NonEtchPreTreatment') then AddStep('NonEtchPreTreatment', 'NonEtchPreTreatment01')// 2470
    else AddStep('Oxide', 'Oxide01');

    if not TopLevelGetsPEP then AddSubsAndInnersAtStep
    else if LayupCoreCount < 2 then AddSubsAndInnersAtStep;

  end;

  if (( PressCycleMoreThan1 ) or ( MatPostOxideBake )) then
    AddStep('Post_Oxide_Baking', 'Post_Oxide_Baking01');

  // New Pre-Book Steps 230913  2472
  AddStep('Pre_Book', 'Pre_Book01'); // Everything gets pre-book first, flowchart steps are unnecessary

  if GreaterThan1CoreOrSequential then
  begin

    if CoreBuild then CoreBuildTopBotFamily(FamTop, FamBot)
    else
    if FoilBuild then FoilBuildFirstAndLastCoreFamily(FamTop, FamBot)

    if ( FamTop = 'Faradflex' ) or ( FamBot = 'Faradflex') then
    begin

      if (NumOfCores <= 6) and
         (PressThickness <= 3.0) and
         (Not Fnc.SysGetAttrValue('Pulse_Bond'))
      then
      begin

        AddStep('Pin_Bond', 'Pin_Bond01');
        AddStep('Rivetingx4', 'Rivetingx4-01');

      end
      else
       AddStep('Pulse_Bond', 'Pulse_Bond01');

    end
    else
    begin

      if PinLamination then
      begin

        AddStep('Pin_Bond', 'Pin_Bond01');
        AddStep('Pin_Lam', 'Pin_Lam01');

      end
      else if PulseBond then AddStep('Pulse_Bond', 'Pulse_Bond01');
      else
      begin
        // remaining steps
        if HasSlippage and ( Not ((NumOfCores <= 8) and (PressThickness <= 2.3)) ) then
           AddStep('Pulse_Bond', 'Pulse_Bond01');
        else
        begin

          AddStep('Pin_Bond', 'Pin_Bond01');

          if ( PressThickness > 0.7 ) and
             ( Fnc.SysGetAttrValue('Panel_Width') > 460) and
             ( Fnc.SysGetAttrValue('Panel_Length') > 510)
          then
            AddStep('Rivetingx4', 'Rivetingx4-01')
          else
          begin

            AddStep('Rivetingx2', 'Rivetingx2-01');

            if HasSlippage and (NumOfCores <= 3) and (PressThickness <= 2.3) then
              AddStep('PlasticEye_Riveting', 'PlasticEye_Riveting01');

          end;

        end;

      end;

    end;

  end
  else if ( HasSlippage and ( PressThickness <= 2.3 ) )  then
    AddStep('PlasticEye_Riveting', 'PlasticEye_Riveting01');

  {Hot Press Steps}
  AddStep('Hot_Press', 'Hot_Press01')

  {Inner Layer Finishing Steps}

  // 2617 Additional Hitalex lamination flow
  if ( Fnc.SysGetAttrValue('LayerCount') >= 14 ) and ( PressThickness >= 2.6 ) then
    AddStep('HitalexLam', 'HitalexLam-01');

  AddStep('Scope_Drilling', 'Scope_Drilling01');

  if (PressThickness > 1.8) or
     (PressThickness < 0.6) or
     Fnc.SysGetAttrValue('IL_Finish_Rout')
  then
  begin

    AddStep('IL_Rout', 'IL_Rout01');
    AddStep('IL_Bevel', 'IL_Bevel01');

  end
  else
    AddStep('IL_Shearing', 'IL_Shearing01');

  AddStep('Outgoing', 'Outgoing01');

  if ( BakeB4CNCDrill ) or ( Fnc.SysGetAttrValue('Baking_After_HP') = true ) then  // 1106 Baking Before NC
    AddStep('Bake_After_HP', 'Bake_After_HP01');       

end;

function GetsUltrasonic( afterDesmear : string )  : boolean;  // 978 Updated Cu Rule - Metalization
var

  partsPerPanel : integer;
  thickness,
  minDrillHoleSize,
  aspectRatio : float;

begin

  result := false;
  partsPerPanel := Fnc.SysGetAttrValue('Panel');
     
  if NCRun = 1 then
  begin

    if Fnc.SysGetAttrValue('LayerCount') > 2 then
      thickness := PressThickness
    else
      thickness := DSThicknessB4Plating;
      
    minDrillHoleSize := Fnc.SysGetAttrValue('Min_Drill_Size');
    aspectRatio := Fnc.SysGetAttrValue('Aspect_Ratio_Val');

  end                          
  else
  begin

    if Fnc.SysGetAttrValue('LayerCount') > 2 then
      thickness := LayupThickness
    else                 
      thickness := DSThicknessB4Plating;
                                          
    minDrillHoleSize := Fnc.SysGetAttrValue('Min_Drill_Size_2');
    aspectRatio := Fnc.SysGetAttrValue('Aspect_Ratio_Val_2');

  end;                            
                                    
  if  (( minDrillHoleSize <= 0.20 ) and ( thickness > 1.0 )) or // 1204 Updated Desmear flow
      (( partsPerPanel = 1 ) and ( thickness >= 2.0 ) and ( minDrillHoleSize <= 0.25 )) or // 1139 Hole Check after Electroless
      (( minDrillHoleSize < 0.25 ) and ( thickness >= 2.0 )) or
      ( aspectRatio > 13.6 ) or
      (( afterDesmear ) and ( verticalDesmear ))             
  then
    result := true;

end;

function GetsHoleCheck : boolean;  // 1139 Hole Check After Electroless
var                
  thickness : float;            
  minDrillHoleSize : float;

begin

  result := false;
     
  if NCRun = 1 then
  begin         
    if Fnc.SysGetAttrValue('LayerCount') > 2 then
      thickness := PressThickness
    else
      thickness := DSThicknessB4Plating;                     
      
    minDrillHoleSize := Fnc.SysGetAttrValue('Min_Drill_Size');
  end                          
  else              
  begin
    if Fnc.SysGetAttrValue('LayerCount') > 2 then
      thickness := LayupThickness
    else                 
      thickness := DSThicknessB4Plating;
      
    minDrillHoleSize := Fnc.SysGetAttrValue('Min_Drill_Size_2'); 
  end;                       
                                    
  if ( minDrillHoleSize < 0.25 ) and ( thickness >= 2.8 ) then
    result := true;

end;  

procedure Metalization;   // 978 Updated Cu Rule - Metalization
var
  i : integer;
  Material: string;
  Thickness: double;
  StepList: TStringList;

  Rte_Step : string;                            
  
begin

  Material := '';

  if ((Fnc.SysGetAttrValue('CoreMat') = 'FR408') or
      (Fnc.SysGetAttrValue('PPGMat') = 'FR408')) and
     (NCRun = 2)
  then              
  begin

    ShowMessage('FR408 MATERIAL AND 2 TIME NC, PLS REFER TO PE FOR METALIZATION PROCESS');
    AddStep('EGX_Missing_Steps', 'EGX_Missing_Steps01');

  end;
                                                                  
  Material := GetDesmearSearchMaterial;
       
  if Fnc.SysGetAttrValue('LayerCount') > 2 then // 2 Layer Fixes
    Thickness := PressThickness
  else
    Thickness := DSThicknessB4Plating;

  StepList := GetDesmearStepList(Material, Thickness);

  if StepList.Count > 0 then
  begin

    Rte_Step := '';

    for i := 0 to StepList.Count - 1 do
    begin

      case StepList.Strings[i] of
        //'DM2'                   : Rte_Step := 'Desmear_DM2';  // 2466
        'Deburr'                : Rte_Step := 'Deburr';  // 2466
        'Hiji Line'             : Rte_Step := 'Desmear_AlkRinse';
        //'Alkaline Rinse'      : Rte_Step := 'Desmear_AlkRinse';
        'Hollmuller Desmear'    : Rte_Step := 'Desmear_Holl';
        'Oven Baking'           : Rte_Step := 'Desmear_Baking';
        'Oven Baking2'          : Rte_Step := 'Desmear_Baking_2';
        'Plasma'                : Rte_Step := 'Plasma';
        'Plasma2'               : Rte_Step := 'Plasma_2';
        'Hollmuller Desmear2-1' : Rte_Step := 'Desmear_Holl2_1';
        'Hollmuller Desmear2-2' : Rte_Step := 'Desmear_Holl2_2';
        //'DM2-1'                 : Rte_Step := 'Desmear_DM2_1';  // 2466
        //'DM2-2'                 : Rte_Step := 'Desmear_DM2_2';  // 2466
        'Ultrasonic'            : Rte_Step := 'Ultrasonic';
        'Vertical Desmear'      : Rte_Step := 'Vertical_Desmear';  // 978
        'Vertical Desmear2'     : Rte_Step := 'Vertical_Desmear_2';
        'Hole Cleaning'         : Rte_Step := 'Hole_Cleaning';  //OD 2294                   
      end;

      if Rte_Step <> '' then AddStep(Rte_Step, Rte_Step + '0' + IntToStr(MetalizationRun));

      // OD 2294 removes Vertical_Desmear as a step - The Replacement Hole Cleaning does not
      if Rte_Step = 'Vertical_Desmear_2' then verticalDesmear := true;

    end;

    StepList.Free;

  end
  else                      
    AddStep('Desmear', 'Desmear' + '0' + IntToStr(MetalizationRun));

  MetalizationRun := MetalizationRun + 1;

  if GetsUltrasonic(true) then
   AddStep('UltraSonicStep', 'UltraSonicStep' + '0' + IntToStr(MetalizationRun));

  if NCRun = 1 then // 1204 Updated Desmear Flow
  begin

    //if LaserG30KMechOrSkipBVH then
    // 2616 VELCP Update Flow
    if (MechBlindViaSide <> 'None') or (MaxBlindViaDepthSkpVia > 0.280) then
    begin

      AddStep('Plasma_3', 'Plasma_3' + '0' + IntToStr(MetalizationRun));

      if MechBlindViaSide <> 'None' then
      begin

        AddStep('Electroless', 'Electroless' + '0' + IntToStr(MetalizationRun));
        AddStep('Strike_Plating', 'Strike_Plating' + '0' + IntToStr(MetalizationRun));
        AddStep('Electroless_SP', 'Electroless_SP' + '0' + IntToStr(MetalizationRun));

      end
      else // (MaxBlindViaDepthSkpVia > 0.280) 
        AddStep('Electroless', 'Electroless' + '0' + IntToStr(MetalizationRun));

    end
    else
      AddStep('Electroless', 'Electroless' + '0' + IntToStr(MetalizationRun));

  end
  else
    AddStep('Electroless', 'Electroless' + '0' + IntToStr(MetalizationRun));

  //2616
  {if ( NCRun = 1 ) and ( MechBlindViaSide <> 'None' ) then // 2295  Updated VELCP Flow
  begin
    AddStep('Strike_Plating', 'Strike_Plating' + '0' + IntToStr(MetalizationRun));
    AddStep('Electroless_SP', 'Electroless_SP' + '0' + IntToStr(MetalizationRun));
  end;}
  
  if GetsHoleCheck then  // 1139 Hole Check After Electroless
    AddStep('Hole_Check_AfterEless', 'Hole_Check_AfterEless' + '0' + IntToStr(MetalizationRun));

end; 

procedure Conformal_Mask; // 1138 Microetch for Laser Via
begin

  Fnc.SysSetAttrValue('Conf_Mask', true);
  AddStep('Conf_Mask', 'Conf_Mask01');
  AOIforCMK := true;
  AddStep('OL_DES_CM', 'OL_DES_CM01');
  AddStep('OL_AOI_CM', 'OL_AOI_CM01');

end;
        
procedure NonUVMicroEtch; // 1138 Microetch for Laser Via
begin
                                  
  if (( BaseCuTopUM > 9 ) and
      ( BaseCuBotUM > 9 ) and
      ( CustCode_Rule('Customer') <> 'FA' )) or
     Fnc.SysGetAttrValue('ConfMask_UEtch_OvR')  // 1112 Micro-etch for thick board
  then
  begin

    if ( PressThickness <= 4.0 ) then  // 2615 Micro-Etch HAL
      AddStep('MicroEtch', 'MicroEtch01')
    else
      AddStep('MicroEtchHAL', 'MicroEtchHAL01');

  end;
      
end;

function UVLaser: boolean;
begin

  // From 2472, comment from Hereole that UV laser is no longer used.
  // Needs cleaned up (all rules and config) meanwhile the automatic rule using Pin Lamination is disabled.
  {if  (
       (( UVLaserB_Top > 0 ) or ( UVLaserA_Bot > 0 )) and
       ( UVLaserB_Top + UVLaserA_Bot < 3500 ) and
       ( PinLamination )   // Definition changed with 2472 - check how this decision should be updated.
      )                     
        or Fnc.SysGetAttrValue('ForceUVLaser')}

  if Fnc.SysGetAttrValue('ForceUVLaser') then result := true else result := false;

end;

procedure UVLaserMicroEtch;
begin
                      
  if ( BaseCuTopUM > 9 ) and ( BaseCuBotUM > 9 ) then // 2615 Micro-Etch HAL
  begin

    if ( PressThickness <= 4.0 ) then
      AddStep('MicroEtch', 'MicroEtch01')
    else
      AddStep('MicroEtchHAL', 'MicroEtchHAL01')

  end;

end;

procedure BlindVia; // 2360 Conformal Mask > Laser > IL Finishing Process Flow Change
begin

  if not DirectLaser then // 1307 Direct Laser
  begin

    if UVLaser then
    begin

      // 1112 Micro-etch for thick board
      UVLaserMicroEtch; // 2615 Micro-Etch HAL

      if LaserABotHits > 0 then AddStep('UV_LaserA', 'UV_LaserA01');                                                        
      if LaserBTopHits > 0 then AddStep('UV_LaserB', 'UV_LaserB01');
      
    end
    else
    begin

      if SelectPlatingLine = 'FILL_VIA' then  // 1138 Microetch for Laser Via
      begin

        NonUVMicroEtch;
        Conformal_Mask;

      end
      else
        Conformal_Mask;

      if ShearingRequired then  // 2269 Shearing After Laser 
      begin
      
        if  (PressThickness > 1.8) or
            (PressThickness < 0.6) or
            (Fnc.SysGetAttrValue('IL_Finish_Rout'))
        then
        begin

          AddStep('IL_Rout_Laser', 'IL_Rout_Laser01');                            
          AddStep('IL_Bevel_Laser', 'IL_Bevel_Laser01');

        end                                                       
        else
          AddStep('Shearing_Laser', 'Shearing_Laser01');
          
      end;
                                                                          
      if (SelectPlatingLine <> 'FILL_VIA') then NonUVMicroEtch

      // CO2 Laser
      if LaserABotHits > 0 then AddStep('CO2_LaserA', 'CO2_LaserA01');
      if LaserBTopHits > 0 then AddStep('CO2_LaserB', 'CO2_LaserB01'); 
                                    
    end;                                                                                                    
  end                             
  else                                
  begin

    AddStep('Hist_Line', 'Hist_Line01');

    if LaserABotHits > 0 then AddStep('Dir_LaserA', 'Dir_LaserA01');
    if LaserBTopHits > 0 then AddStep('Dir_LaserB', 'Dir_LaserB01');

    if PressThickness <= 4.0 then  //  2615
      AddStep('MicroEtch_DirLaser', 'MicroEtch_DirLaser01')
    else
      AddStep('MicroEtch_DirLaserHAL', 'MicroEtch_DirLaserHAL01');

  end; 
  
end;

procedure NC_EpxPlug_wFlash;
begin

  //AddStep('NC_Drill', 'NC_Drill01');      // 2466
  AddStep('NC_Drill_First', 'NC_Drill-EpxPlug');

  if MechBlindViaSide <> 'None' then AddStep('MechBlindVia1', 'MechBlindVia101');

  if MechBlindViaSide = 'Both' then AddStep('MechBlindVia2', 'MechBlindVia201');

  if GetsExtraAZBlowerStep then // 1144 Additional AZ Blower Step after CNC Drill 
    AddStep('HighPressAirBlow', 'HighPressAirBlow-2');
    
  Metalization;
  AddStep('Electrolytic_Cu_1', 'Electrolytic_Cu_101');
  //AddStep('CuHoleCheck', 'CuHoleCheck01');

  if PlatingLineP4orP6orP7 or
   (( Plating_Line = 'MCP' ) and (( Fnc.SysGetAttrValue('Min_Drill_Size') <= 0.25 ) or ( Fnc.SysGetAttrValue('EpoxySide') <> 'None' )))
  //( Fnc.SysGetAttrValue('NCRunX2') = false ) and ( Fnc.SysGetAttrValue('EpoxySide') <> 'None' ) // Commented out NCRunX2 = false. If it's false then NCRun will always = 1
  then
  begin

    AddStep('CuHoleCheck', 'CuHoleCheck' + '0' + IntToStr(MetalizationRun));

    StepInstructionERP('HOLCP007');

  end;
  
  if ( ( Fnc.SysGetAttrValue('BackDrill_Epoxy') ) and ( Fnc.SysGetAttrValue('NCRunX2') = true )) then // 844 Backdrill after Electrolytic Cu
    Back_Drill_Epoxy;

  Epoxy_Plugging;

  AddStep('Scope_Drilling_EP', 'Scope_Drilling_EP01');

end;

procedure PressThkWarning;
begin

   if PressThickness > 4.0 then // 1112 Micro-etch for thick board
     MessageDlg('Board too thick for Core Build Cu Thinning standard Micro-etch process.', mtWarning, Setof([mbOK]), 0);

end;

procedure RouteFlow02;
begin                                                                                                                                  

  NCRun := 0;

  if ((MfgAttr('LayerCount') > 2) or (MfgAttr('MfgPartType') = 'Sub')) then
  begin

    Booking;

    if (( CoreBuild ) or ( SubAssemblyCoreBuild )) then
    begin

      // 2769 Vertical Buffing Auto-Mode
      if MfgAttr('CoreBuild_CuThin_Mode') = 'Auto' then
      begin

        // Core Build & Cu Thk >= 1/2oz. Sub-Assemblies assumed to always have > 1/2oz Cu as they are plated.
        if (CoreBuild and ((BaseCuTopUM >= 18) or (BaseCuTopUM >= 18))) or SubAssemblyCoreBuild then
        begin

          AddStep('CoreBuild_GTHOC_Vertical_Buffing', 'CoreBuild_GTHOC_Vertical_Buffing01');
          SetMfgAttr('CoreBuild_CuThin_Process', 'Vertical Buffing');
          
        end;

      end
      else
      begin
        // Core Build Cu Thinning
        if MfgAttr('CoreBuild_CuThin_Process') <> 'None' then
        begin

          if MfgAttr('CoreBuild_CuThin_Process') = 'Buffing' then
            AddStep('CoreBuild_CT_Buffing1', 'CoreBuild_CT_Buffing101')
          else if MfgAttr('CoreBuild_CuThin_Process') = 'Buffing + Micro-Etch + Buffing' then  // 1473 fix attribute
          begin

            AddStep('CoreBuild_CT_Buffing1', 'CoreBuild_CT_Buffing101');
            AddStep('CoreBuild_MicroEtch', 'CoreBuild_MicroEtch01');
            AddStep('CoreBuild_CT_Buffing2', 'CoreBuild_CT_Buffing201');

            PressThkWarning;

          end
          else if MfgAttr('CoreBuild_CuThin_Process') = 'Micro-Etch + Buffing' then // 1473
          begin

            AddStep('CoreBuild_MicroEtch', 'CoreBuild_MicroEtch01');
            AddStep('CoreBuild_CT_Buffing1', 'CoreBuild_CT_Buffing101');
  
            PressThkWarning;
  
          end
          else if MfgAttr('CoreBuild_CuThin_Process') = 'Vertical Buffing' then // 1473
          begin
  
            AddStep('CoreBuild_CT_Buffing1', 'CoreBuild_CT_Buffing101');
  
            PressThkWarning;
  
          end
  
          UpdateInProcessCuThk(Cu_Thk_After_CuThin);
  
        end;
      end;

    end;      

    if MfgAttr('BlindVias') then BlindVia;
         
  end
  else
  begin

    if MfgAttr('PanelsPerSheet') = 0 then
    begin

      AddStep('KK_Drill', 'KK_Drill01');

      if LayupThickness > 0.6 then
      begin

        if LayupThickness > 3.5 then
          AddStep('Beveling', 'Beveling01')
        else
          AddStep('ManualBeveling', 'ManualBeveling01');

      end;

      AddStep('Outgoing', 'Outgoing01');
          
    end
    else
      AddStep('Shearing', 'Shearing01');

  end;

  if ( not MfgAttr('BlindVias') ) and MicroEtchReqd then  // 1112 Micro-etch for thick board
  begin

    if ( PressThickness <= 4.0 ) then  // 2615 Micro-Etch HAL
      AddStep('MicroEtch', 'MicroEtch01');
    else
      AddStep('MicroEtchHAL', 'MicroEtchHAL01')

  end;


  if MfgAttr('NCRunX2') and MfgAttr('CappedVia') then // 2386
  begin

    NC_EpxPlug_wFlash;

    //AddStep('NC_Drill', 'NC_Drill02');  // 2466
    AddStep('NC_Drill_Second', 'NC_Drill01');

  end
  else
  begin

    //AddStep('NC_Drill', 'NC_Drill01');  // 2466
    AddStep('NC_Drill_First', 'NC_Drill01');

    if MechBlindViaSide <> 'None' then AddStep('MechBlindVia1', 'MechBlindVia101');
            
    if MechBlindViaSide = 'Both' then AddStep('MechBlindVia2', 'MechBlindVia201');

  end;
  
  // 1144 Additional AZ Blower Step after CNC Drill
  if GetsExtraAZBlowerStep then AddStep('HighPressAirBlow', 'HighPressAirBlow-1');

  if MfgAttr('PLCountersink') then AddStep('PLCountersink', 'PLCountersink01');

  if MfgAttr('EdgePlating') then
  begin
    AddStep('EdgePlateRoute', 'EdgePlateRoute01');
    // AddStep('WashingStd', 'WashingStd01');   // 2621 Remove Washing Step after the Edge Plate Rout Step
  end;

  Metalization;

  RouteFlow03;

end;
