//HeaderImportExport-->
//SiteId=0
//Enterprise=True
//ScriptType=0
//ScriptGroup=
//HeaderImportExport<--
uses
  CNCDrillToolReportMaster  
                                                                       
procedure InsertDrillToolData(ToolData: TStringList);
var
  i : integer;
  DrillName : string;
  DrillDetails: TsysTable;                 
  ToolCol: integer;         
  ToolRow: integer;            
  DrillsWithTools: integer;
  DrillSize: float;                          
  DrillList: TStringList;           
                                
  SlotToolsList: TStringList;      
  DrillToolsList: TStringList;
  DrillToolStr: String;
                                        
  Thickness: float;
begin
  Thickness := 0.0;
  
  DrillList := TStringList.Create;
  DrillList.Sorted := true;       
  for i := 1 to FindNumberofDrillFiles do             
  begin
    if (Fnc.SysGetItemAttrValue('DrillDefID', True, cStackupDrill, i) = 1) or
       (Fnc.SysGetItemAttrValue('DrillDefID', True, cStackupDrill, i) = 9)
    then
    begin
      DrillName := Fnc.SysGetItemAttrValue('ItemLayerName', True, cStackupDrill, i);
      DrillList.Add(DrillName);
    end;
  end;                                  

  SlotToolsList := TStringList.Create;
  SlotToolsList.LoadFromFile(FileTemplateDir + SlotToolFile); // Starts at Col 213 (F213)
  DrillToolsList := TStringList.Create;
  DrillToolsList.LoadFromFile(FileTemplateDir + DrillToolFile); // Starts at Col 17 (F17)

  DrillsWithTools := 0;
  ToolRow := 3;

  for i := 0 to DrillList.Count -1 do   
  begin
    DrillName := DrillList.Strings[i]
    DrillDetails := Fnc.SysGetDrillRouteToolsDetails(DrillName);

    if not DrillDetails.IsEmpty then
    begin
      DrillsWithTools := DrillsWithTools + 1;

      ToolRow := ToolRow + 1;
      
      ToolData.Add(DrillName); 

      if MfgAttr('LayerCount') > 2 then
      begin
        if Fnc.SysGetLayerAttrValue(DrillName, 'DrillDefID') = 1 then
          Thickness := MfgAttr('Press_Thickness')
        else
          Thickness := MfgAttr('LayupThickness');
      end                                                                               
      else                            
        Thickness := DSThicknessB4Plating;
        
      ToolData.Add(FloatToStr(Thickness));
      ToolData.Add(MfgAttr('ItemMatrlDesc'));
      
      if Fnc.SysGetLayerAttrValue(DrillName, 'DrillDefID') = 1 then
      begin
        ToolData.Add(MfgAttr('NC_Drill_1_EntryMat'));
        ToolData.Add(IntToStr(MfgAttr('Stack_Hgt')));
      end                    
      else
      begin
        ToolData.Add(MfgAttr('Drill_Entry_Sht_2'));
        ToolData.Add(IntToStr(MfgAttr('Stack_Hgt_2'))); 
      end;

      DrillDetails.First;
      while not DrillDetails.Eof do
      begin
        DrillSize := DrillDetails.FieldByName('DRILL_SIZE').AsFloat;
        DrillToolStr := FormatFloat('0.000', DrillSize);

        if DrillDetails.FieldByName('HoleType').AsString = 'Slot' then
          ToolCol := SlotToolsList.IndexOf(DrillToolStr) + 213
        else                           
          ToolCol := DrillToolsList.IndexOf(DrillToolStr) + 17                   
        
        ToolData.Add('DT' + ',' + IntToStr(ToolRow) + ',' + IntToStr(ToolCol) + ',' + DrillDetails.FieldByName('TotNumHoles').AsString);
        DrillDetails.Next;                    
      end;                            
      //Fnc.OpenDataGrid(DrillDetails);
    end;                           
    Fnc.SysTableDestroy(DrillDetails);
  end;
  
  ToolData.SaveToFile(ReportFilePath + ToolFileEnd); 
  
  DrillList.Free;                                  
  SlotToolsList.Free;                       
  DrillToolsList.Free;
  ToolData.Free;                                 
end;                                       

procedure GenReportFilePath;
begin
  ForceDirectories(WorkingDir);        
  ReportFilePath := WorkingDir +
                    IntToStr(MfgAttr('ItemSeq')) + '-' +
                    CleanFileName(Fnc.GetJobData.Values['JobName'] + ' Rev-' +
                    CleanFileName(Fnc.GetJobData.Values['Revision'])) + ' ' +                                            
                    CleanFileName(MfgAttr('ItemMatrlDesc'));
end;
                                                 
procedure GenDrillReportData             
begin               
  GenReportFilePath;             
  ToolData := TStringList.Create;
  InsertDrillToolData(ToolData)
end;
                                  
begin                               
  GenDrillReportData
end;
