//HeaderImportExport-->
//SiteId=0
//Enterprise=True
//ScriptType=0
//ScriptGroup=HCS
//HeaderImportExport<--
uses
  Event_RouteGenLibrary, //Route System Scripts
  Eng_RouteFunctions, //Route System Functions
  RouteFunctions;

procedure SecondaryPlug;
begin
  if pos('Secondary',Fnc.SysGetAttrValue('SMPlugType')) > 0 then
    begin     
    case Fnc.SysGetAttrValue('SMPlugType') of
      'Secondary SM Plug A' : AddStep('Secondary_PlugA', 'Secondary_PlugA01');
      'Secondary SM Plug AB' : begin AddStep('Secondary_PlugA', 'Secondary_PlugA01'); AddStep('Secondary_PlugB', 'Secondary_PlugB01'); end;
      'Secondary SM Plug B' : AddStep('Secondary_PlugB', 'Secondary_PlugB01');
      'Secondary SM Plug BA' : begin AddStep('Secondary_PlugB', 'Secondary_PlugB01'); AddStep('Secondary_PlugA', 'Secondary_PlugA01'); end;
    end;

    if SecondaryPlugInkType <> '' then
    begin
      if SecondaryPlugInkType = 'UV' then
      begin
        AddStep('UV_Cure', 'UV_Cure01');
      end
      else if SecondaryPlugInkType = 'Photo' then
      begin
        AddStep('Plug_Formation', 'Plug_Formation01');
        AddStep('SP_Final_Cure', 'SP_Final_Cure01');
      end;

      AddStep('Hole_Check', 'Hole_CheckSP01');  //This step is independent from the other hole check steps

    end
    else
      ShowMessage('Warning!!! Secondary Plug Ink Type not selected, process steps will be missing.');
  end;
end;

procedure Back_Drill;
begin
  if BKDRTop = true then
    AddStep('Back_Drill_B', 'Back_Drill_B01');

  if BKDRBot = true then
    AddStep('Back_Drill_A', 'Back_Drill_A01');

  BackDrillDone := true;

  AddStep('HighPressAirBlow', 'HighPressAirBlow01');

  // 1213 Additional Hole Check after Backdrill step condition
  if ( Fnc.SysGetAttrValue('SMPlugType') <> 'None' ) or ( Fnc.SysGetAttrValue('EpoxySide') <> 'None' ) then
  begin
    if Fnc.SysGetAttrValue('BackDrill_Hole_Type') = 'Non-Plugged Holes' then
      AddStep('Hole_Check_BD', 'Hole_Check_BD01');
  end;

end;

procedure Baking;
begin
  if (
      (
       (MaterialGetsBaking = true) or
       (Fnc.SysGetAttrValue('Lead_Free') = true) or
       (CustCode_Rule('Customer') = 'HJ')
      )
  and
      //(HasSolderMaskType('PSR2000-SP300HFM') = false )
      (HasSolderMaskType('PSR4000-AM10') = false ) // Per email from Alison 11/06
     )
  then
  begin
    AddStep('Baking', 'Baking01');
    BakingDone := true;

    if ( BoardFinish = 'OSP' ) and
       ( SelectiveGoldType<> 'ENIG') then //) or ( ENIGplusOSP ) then // 1173 Additional Surface Finishing. Selective ENIG + OSP   // 1256 - removed ENIG + OSP per Herole comment
      AddStep('OSP_Bake_Wash', 'OSP_Bake_Wash01');  // 761 - Add Washing step after baking for OSP finishing
  end;
end;

procedure Immersion_Silver;                   // Updated per Changes from Mani Jan 2016
begin
  AddStep('Immersion_Silver', 'Immersion_Silver01');

  if BakingDone = false then
  begin
    Baking;
    if BakingDone then
      AddStep('OffLine_PreTreat', 'OffLine_PreTreat01'); // Per Imm Silver Changes from Mani Jan 2016 3EPCB
  end;
end;

procedure Immersion_Silver_Sel_Gold(process: string); // Updated per Changes from Mani Jan 2016
begin
  if process = 'Taping'  then
  begin
    AddStep('Immersion_Silver', 'Immersion_Silver01');

    {if BakingDone = false then  - moved to after electrical test per 1256 reply Word Doc
    begin
      Baking;
      if BakingDone then
        AddStep('OffLine_PreTreat', 'OffLine_PreTreat01'); // Per Imm Silver Changes from Mani Jan 2016 3EPCB
    end;}
    //ImmersionSilverDone := true;  1256
  end
  else if process = 'Photo' then
  begin
    Baking;

    if BakingDone then
      AddStep('OffLine_PreTreat', 'OffLine_PreTreat01');
        
    AddStep('OL_Photo_Selective_Finishing', 'OL_Photo_Selective_Finishing01');
    AddStep('OL_DEV', 'OL_DEV_IS');
    AddStep('Mdl_Insp_OLDev_IS', 'Mdl_Insp_OLDev_IS');
    AddStep('Immersion_Silver', 'Immersion_Silver01');
    AddStep('IS_Strip', 'IS_Strip01'); 
  end;
end;

procedure Lead_Free_HAL_Sel_Gold(process: string); // 1355 Could maybe consolidate this with Immersion Silver + Gold at some point
begin
  if process = 'Taping'  then
  begin
    AddStep('HAL', 'HAL01');
  end
  else if process = 'Photo' then
  begin
    Baking;

    if BakingDone then
      AddStep('OffLine_PreTreat', 'OffLine_PreTreat01');

    AddStep('OL_Photo_Selective_Finishing', 'OL_Photo_Selective_Finishing01');
    AddStep('OL_DEV', 'OL_DEV_IS');
    AddStep('Mdl_Insp_OLDev_IS', 'Mdl_Insp_OLDev_IS');
    AddStep('HAL', 'HAL01');
    AddStep('LFH_Strip', 'LFH_Strip01');  
  end;
  
  AddStep('Hole_Check', 'Hole_Check01');
  HoleCheckDone := true;
end;

procedure VCut;
begin
  if (
      (LayupThickness <= 0.65) or
      (Fnc.SysGetAttrValue('DeWarp') = true) or
      (
       (
        ((Fnc.SysGetAttrValue('CoreMat') = 'MCL-BE-67G(H)') or (Fnc.SysGetAttrValue('PPGMat') = 'MCL-BE-67G(H)')) or
        ((Fnc.SysGetAttrValue('CoreMat') = 'NPG-TL') or (Fnc.SysGetAttrValue('PPGMat') = 'NPG-TL'))
       )
       and
       (LayupThickness <= 1.0)
      )
     )
  then
    AddStep('DeWarp', 'DeWarp01');

  AddStep('VCut', 'VCut01');

  VCutDone := true;

end;

procedure Immersion_TinPt2; // Immersion Tin Changes
begin
  if BakingDone = false then
    Baking;

  if ((Fnc.SysGetAttrValue('BackDrill') = true) and (BackDrillDone = false)) then  //Make sure this does not get done multiple times
    Back_Drill;

  if (
      (Fnc.SysGetAttrValue('Gold_Tab_Rows') <= 2) and
      (VCUT_TYPE = 'Panel') and
      (VCutDone = false)
     )
  then
    VCut;

  if LayupThickness <= 3 then
  begin
    AddStep('ImmTin_AlkRinse', 'ImmTin_AlkRinse01');

    if Fnc.SysGetAttrValue('CappedVia') = true then
    begin
      if Fnc.SysGetAttrValue('Min_Surf_Plt') >= 18 then
        AddStep('MicroEtch_ImmTin', 'MicroEtch_ImmTin01');
    end
    else
      AddStep('MicroEtch_ImmTin', 'MicroEtch_ImmTin01');
  end;

  AddStep('OffLine_PreTreat', 'OffLine_PreTreat01');
  AddStep('PreFinish_Insp', 'PreFinish_Insp01');
  AddStep('Immersion_Tin', 'Immersion_Tin01');
  AddStep('Immersion_Tin_Bake_Norm', 'Immersion_Tin_Bake_Norm01');

end;

function NeedsFinalBaking : boolean;
begin
  result := false;

  if (
      (
       (MaterialGetsBaking = true) or
       (Fnc.SysGetAttrValue('Lead_Free') = true) or
       (CustCode_Rule('Customer') = 'HJ')
      )
      or
      (
       (BoardFinish = 'Full Body Gold') or
       (BoardFinish = 'Thin/Thick Au Plate') or // 1256 NEED TO CHECK THIS
       //(SelectiveGoldType= 'BGA, Encapsulation') or  1256
       // (SelectiveGoldType= 'Pattern (Overhang)') or 1256
       (SelectiveGoldType= 'Pattern Overhang / PTH') or  // 1256 Need to check this
       //(GoldFingerType = 'Lead Line Etching B4 Res (Sel)') or 1256
       (Fnc.SysAttrEditGetAttrValue('Gold_Fgr_Type') = 'Lead Line Etching') or
       //(GoldFingerType = 'Chamfer B4 Res (Sel)') or 911
       // (GoldFingerType = 'After Pattern (Sel)') or   1256
       (GoldFingerType = 'NO Lead Line Etching') or
       //(GoldFingerType = 'Lead Line Etching Af Res (Sel)') or 1256
       (GoldFingerType = 'Au Finger Plate after SM') or
       //(GoldFingerType = 'Chamfer Af Res (Sel)') or 1256
       (BoardFinish = 'ENIG') or
       //(BoardFinish = 'ENIG + OSP') or // 1173 Additional Surface Finishing. Selective ENIG + OSP 
       ( ENIGplusOSP ) or // 1256
       (BoardFinish = 'ENEPIG') //or
       // (GoldFingerType = 'Thin/Thick - Lead Line Etching B4 Res (Sel)') or 1256
       //(GoldFingerType = 'Thin/Thick - Chamfer B4 Res (Sel)')  911
       // (GoldFingerType = 'Thin/Thick - After Pattern (Sel)') 1256
      )
      or
      ((BoardFinish = 'HAL') or
       (BoardFinish = 'Lead Free HAL') or
       (BoardFinish = 'LB Free HAL + Immersion silver')) // 1322
  and
      (HasSolderMaskType('PSR4000-AM10') = false )
     )
  then
    result := true;
end;

function LeadFreeHALWithGoldTaping : boolean;
begin
  result := false;

  if ( BoardFinish = 'Lead Free HAL' ) and
     ( SelectiveGoldorFinger ) and
     ( Fnc.SysGetAttrValue('Lead_Free_HAL_Process') = 'Taping' )
  then
    result := true;
end

procedure RouteFlow04;
//var
  //HoleCheckDone : boolean;
begin
 // HoleCheckDone := false;  ENIG Changes

  if ((BoardFinish <> 'HAL') and  (BoardFinish <> 'Lead Free HAL')) then
    SecondaryPlug;

  if GoldFingerType = 'Tab Plating' then
  begin
    if Fnc.SysGetAttrValue('BackDrill') = true then
    begin
      if (
          ((Fnc.SysGetAttrValue('OSP_Type') = 'LEAD FREE WPF21') or
          (Fnc.SysGetAttrValue('OSP_Type') = 'LEAD FREE WPF21 ORGNC') or
          (Fnc.SysGetAttrValue('OSP_Type') = 'LEAD FREE F2LX'))
         and
          (
           ( BoardFinish = 'OSP' ) or 
           //( BoardFinish = 'ENIG + OSP' ) // 1173 Additional Surface Finishing. Selective ENIG + OSP 
           ( ENIGplusOSP ) //1256
          ) 
         )
      then
      begin
        if ((Fnc.SysGetAttrValue('BackDrill') = true) and (BackDrillDone = false)) then
          Back_Drill;
      end;
      else
        ShowMessage('ERROR!!! - UNDEFINED PROCESS FOR TAB PLATING WITH BACK DRILL AND NON-LEAD FREE OSP');
    end;

    if VCUT_TYPE = 'Panel' then
    begin
      if Fnc.SysGetAttrValue('Gold_Tab_Rows') > 2 then
      begin
        if Fnc.HasImpedance = true then
        begin
          if not HoleCheckDone then
          begin
            AddStep('Hole_Check', 'Hole_Check01');
            HoleCheckDone := true;
          end;
          AddStep('Impedance', 'Impedance01');
          ImpedanceDone := true;
        end;

        VCut;

        AddStep('Gold_Tab_Plating', 'Gold_Tab_Plating01');
      end
      else
        AddStep('Gold_Tab_Plating', 'Gold_Tab_Plating01');
    end
    else
      AddStep('Gold_Tab_Plating', 'Gold_Tab_Plating01');

    {if ( BoardFinish = 'Immersion Silver' ) and ( Fnc.SysGetAttrValue('Imm_Silver_Process') = 'Taping' )      // 1256
    begin
      AddStep('Gold_Finger_Taping', 'Gold_Finger_Taping01');
      AddStep('Baking', 'BakingGFT');
      AddStep('OffLine_PreTreat', 'OffLine_PreTreatGFT');
    end;}
  end;

  // 1322 LB Free HAL + Imm Ag
  if BoardFinish = 'LB Free HAL + Immersion silver' then
    AddStep('Immersion_Silver', 'Immersion_Silver01');

  if (BoardFinish = 'HAL') or
     ((BoardFinish = 'Lead Free HAL') and ( Not SelectiveGoldorFinger )) or
     (BoardFinish = 'LB Free HAL + Immersion silver') then
  begin
    AddStep('HAL', 'HAL01');

    if HoleCheckDone = false then
      AddStep('Hole_Check', 'Hole_Check01');

    SecondaryPlug;
  end
  else
  begin
    //if ((ENIG_NFluxDone = true) and (Fnc.SysGetAttrValue('BackDrill') = true)) then
    //  AddStep('Hole_Check');
    if ( not ENIG_NFluxDone ) and ( not LeadFreeHALWithGoldTaping ) then
    begin
      //if Fnc.SysGetAttrValue('BackDrill') = false then    973 - Hole Check After Backdrill Step
      //begin
        if not HoleCheckDone then
        begin
          AddStep('Hole_Check', 'Hole_Check01');
          HoleCheckDone := true;
        end;
      //end;
    end;
  end;
  
  //if ( BoardFinish = 'Immersion Silver' ) and ( Fnc.SysGetAttrValue('Imm_Silver_Process') = 'Taping' ) then      // 1256
  //  AddStep('Gold_Finger_Taping', 'Gold_Finger_Taping01'); 

  if Fnc.SysGetAttrValue('Carbon_Ink') = true then
    AddStep('Carbon_Ink', 'Carbon_Ink01');

  if (
      ((Fnc.SysGetAttrValue('BackDrill') = true) and (BackDrillDone = false)) and
      (BoardFinish <> 'Immersion Tin')
     )
  then //Check reverse condition is true
    Back_Drill;

  if BoardFinish = 'Immersion Tin' then
    Immersion_TinPt2;

  if ( BoardFinish = 'Immersion Silver' ) and
     ( SelectiveGoldorFinger ) and
     ( Fnc.SysGetAttrValue('Imm_Silver_Process') = 'Taping' ) then    // 1256 - Comment from Herole
  begin
    AddStep('Imm_Silv_Taping', 'Imm_Silv_Taping01');
    Immersion_Silver_Sel_Gold('Taping');
  end;

  if LeadFreeHALWithGoldTaping then  // 1355
  begin
    AddStep('LFH_Taping', 'LFH_Taping01');
    Lead_Free_HAL_Sel_Gold('Taping');
    SecondaryPlug; // 1469
  end;

  if (Fnc.SysGetAttrValue('Has_Impedance') = true) and (ImpedanceDone <> true) then
    AddStep('Impedance', 'Impedance01');

  if (
      ((Fnc.SysGetAttrValue('Comp_Type') = 'RESISTANCE') and (Fnc.SysGetAttrValue('Line_Width') <> 0.0)) or
      (Fnc.SysGetAttrValue('Comp_Type') = 'CAPACITANCE & RESISTANCE')
     )
  then
     AddStep('Resistance_Test', 'Resistance_Test01');

  if ((VCUT_TYPE = 'Panel') and (VCutDone = false))
  then
    VCut;

  if Fnc.SysGetAttrValue('NPCountersink') = true then
    AddStep('NPCounterSink', 'NPCounterSink01');

  if Fnc.SysGetAttrValue('Chamfer_Type') = 'Panel Routed' then
  begin
    AddStep('PnlRte_Chamfer_PR', 'PnlRte_Chamfer_PR01');
    AddStep('PnlRte_Chamfer', 'PnlRte_Chamfer01');
  end;

  if Fnc.SysGetAttrValue('Milling_Type') = 'Edge Milling'  then
  begin
    AddStep('Edge_Milling_PR', 'Edge_Milling_PR01');
    AddStep('Edge_Milling', 'Edge_Milling01');
  end;

  if Fnc.SysGetAttrValue('Milling_Type') = 'Milling'  then
    AddStep('Milling', 'Milling01');

  if Fnc.SysGetAttrValue('Counterbore') = true  then
    AddStep('Counterbore', 'Counterbore01');

  if Fnc.SysGetAttrValue('PunchB4EC') = true  then
  begin
    AddStep('Punching', 'Punching01');

    if Fnc.SysGetAttrValue('Punch_Type') = '2 Stage Punch' then
      AddStep('Punching_X2', 'Punching_X2');
  end;

  if (
      (Fnc.SysGetAttrValue('EC_Type') = 'Panel - Before Primary Routing') or
      (Fnc.SysGetAttrValue('EC_Type') = 'Panel - Before Routing') or
      (Fnc.SysGetAttrValue('EC_Type') = 'Panel - Before Punching')
     )
  then
     AddStep('Panel_EC', 'Panel_EC01');

  if (BoardFinish <> 'HAL') and  
     (BoardFinish <> 'Lead Free HAL') and
     (BoardFinish <> 'LB Free HAL + Immersion silver') // 1322
  then
  begin
    if HoleCheckDone = false then
      AddStep('Hole_Check', 'Hole_Check01');
  end;

  AddStep('Routing', 'Routing01');

  if ((Fnc.SysGetAttrValue('PunchB4EC') = false) and (Fnc.SysGetAttrValue('Punch_Type') <> 'None'))  then
  begin
    AddStep('Punching', 'Punching01');

    if Fnc.SysGetAttrValue('Punch_Type') = '2 Stage Punch' then
      AddStep('Punching_X2', 'Punching_X201');
  end;

  if ((Fnc.SysGetAttrValue('VCut_Type') = 'PIECE V-CUT') and (VCutDone = false))  then
    VCut;

  if Fnc.SysGetAttrValue('Chamfer_Type') = 'Piece' then
    AddStep('Piece_Chamfer', 'Piece_Chamfer01');

  AddStep('Final_Rinse', 'Final_Rinse01');

  AddStep('InkJet', 'InkJet01');

  if Fnc.SysGetAttrValue('EC_Type') = 'Part' then
    AddStep('Part_EC', 'Part_EC01');

  // 1310 Additiona Backdrill EC
  if ( Fnc.SysGetAttrValue('BackDrill') ) and
     ( Fnc.SysGetAttrValue('BackDrill_EC') ) and
     ( not GetsHiPot )
  then
    AddStep('BackDrill_EC', 'BackDrill_EC01');

  if Fnc.SysGetAttrValue('FourWireMsm') then
    AddStep('EC_FlyingProbe', 'EC_FlyingProbe01');
                    
  if GetsHiPot then // 1310 Additiona Backdrill EC
  begin
    AddStep('HiPotTest', 'HiPotTest01');

    if ( Fnc.SysGetAttrValue('BackDrill') ) and ( Fnc.SysGetAttrValue('BackDrill_EC') ) then
      AddStep('BackDrill_EC', 'BackDrill_EC01');  
  end;

  if Fnc.SysGetAttrValue('TwoDBarcode') = true then
    AddStep('TwoDBarcode', 'TwoDBarcode01');

  if  (( CustCode_Rule('Customer') = 'HQ' ) and ( LayupThickness >= 2.29 )) or
      ( WarpageLessThanPointFivePct ) or
      (LayupThickness <= 0.6) or
      (Fnc.SysGetAttrValue('DeWarp') = true)
  then
    AddStep('DeWarp', 'DeWarp02');

   //Per Immersion Silver changes from Mani  Jan 2016
   if ( BoardFinish = 'Immersion Silver' ) and ( not SelectiveGoldorFinger ) then
     Immersion_Silver;

  if ( BoardFinish = 'OSP' ) or ( ENIGplusOSP ) then // 1173 Additional Surface Finishing. // 1256
  begin
    if BakingDone = false then
      Baking;

    if (( BakingDone = false ) and ( NeedsFinalBaking )) then
    begin
      AddStep('Baking', 'Baking01');
      BakingDone := true;
    end;

    AddStep('OSP', 'OSP01');
  end;

  {Final Inspection Steps}
  if BakingDone = false then
  begin
    if NeedsFinalBaking then
    begin
      AddStep('Baking', 'Baking01');
      BakingDone := true;

      if  (( GoldFingerType <> 'None' ) and ( GoldFingerType <> 'Tab Plating' )) or
          ( SelectiveGoldType<> 'None' ) or
          (( BoardFinish = 'Immersion Silver' ) and ( Fnc.SysGetAttrValue('Imm_Silver_Process') = 'Taping' ))  
      then
        AddStep('OffLine_PreTreat', 'OffLine_PreTreat02');
    end;
  end;

  if (( BoardFinish = 'Immersion Silver' ) and (Fnc.SysGetAttrValue('CM_Plus') = true )) then
    AddStep('PreFinish_Insp', 'PreFinish_Insp01')
  else
    AddStep('Final_Insp', 'Final_Insp01');

  if (
      (
       //(GoldFingerType = 'Lead Line Etching B4 Res (Sel)') or  1256
       (GoldFingerType = 'Lead Line Etching') or
       (GoldFingerType = 'No Horn - Lead Line Etching B4 Res (Sel)') or
       //(GoldFingerType = 'Chamfer B4 Res (Sel)') or  911
       // (GoldFingerType = 'After Pattern (Sel)') or 1256
       (GoldFingerType = 'NO Lead Line Etching') or
       //(GoldFingerType = 'Thin/Thick - Lead Line Etching B4 Res (Sel)') or 1256
       //(GoldFingerType = 'Thin/Thick - Chamfer B4 Res (Sel)') or
       //(GoldFingerType = 'Thin/Thick - After Pattern (Sel)') or  1256
       (SelectiveGoldType<> 'None')
      )
      or
      (ProdCodeLXType) or
      (Fnc.SysGetAttrValue('Design_Type') = 'Flip Chip') or
      ((Eng_JobType = 'Production') and (CustCode_Rule('Customer') = 'BC')) or
      (HardGoldB4Resist)
     )
  then
    AddStep('Final_Scope_Ins', 'Final_Scope_Ins01');

  if (( BoardFinish = 'Immersion Silver' ) and (Fnc.SysGetAttrValue('CM_Plus') = true )) then
  begin
    AddStep('CMPlus_Coating', 'CMPlus_Coating01');
    AddStep('Final_Insp', 'Final_Insp01');
  end;

  AddStep('Packing', 'Packing01');

end; // HUZZAH!
